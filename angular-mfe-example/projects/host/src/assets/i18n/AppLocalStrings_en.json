{
  " action(s)?": " action(s)?",
  " condition group(s)?": " condition group(s)?",
  " condition(s)?": " condition(s)?",
  " item(s) are deleted successfully": " item(s) are deleted successfully",
  " item(s)?": " item(s)?",
  "\"Red\" is the default if both the \"Green\" and \"Yellow\" conditions evaluate as false. There are no specific\r\n        condition settings for the \"Red\" indicator.": "\"Red\" is the default if both the \"Green\" and \"Yellow\" conditions evaluate as false. There are no specific\r\n        condition settings for the \"Red\" indicator.",
  "** Please select the channel that tracing should\r\n                be applied to.": "** Please select the channel that tracing should\r\n                be applied to.",
  "<app-ilm-title heading=\"Associations Summary\" (closeEvent)=\"cancelAssosciations()\" hideHelp = true></app-ilm-title>": "<app-ilm-title heading=\"Associations Summary\" (closeEvent)=\"cancelAssosciations()\" hideHelp = true></app-ilm-title>",
  "<app-ilm-title heading=\"NEW JOB\" (closeEvent)=\"cancelCreateJob()\" hideHelp = true></app-ilm-title>": "<app-ilm-title heading=\"NEW JOB\" (closeEvent)=\"cancelCreateJob()\" hideHelp = true></app-ilm-title>",
  "<div class=\"marginBottom\">\r\n                  <select [(ngModel)]=\"conditionGroup.operator\" id=\"cg-operator\">\r\n                    <option id=\"cg-add\" value = 'AND' translate>AND</option>\r\n                    <option id=\"cg=or\" value = 'OR' translate>OR</option>\r\n                  </select>\r\n                  <button class=\"btn btn-icon\" role=\"button\" id=\"createCond\" (click)=\"addNewCondition(conditionGroup)\"\r\n                    title=\"{{'Add New Condition'|translate}}\" [disabled]=\"conditionGroup.disableAdd\" translate>\r\n                    <i class=\"ias-icon ias-icon-new_thick\"></i>\r\n                  </button>\r\n                  <button class=\"btn btn-icon\" role=\"button\" id=\"delCond\" (click)=\"onDeleteCondition(conditionGroup)\"\r\n                    title=\"{{'Delete Condition'|translate}}\" [disabled]=\"conditionGroup.disableDelete\" translate>\r\n                    <i class=\"ias-icon ias-icon-delete_thick\"></i>\r\n                  </button>\r\n                  <button class=\"btn btn-icon\" role=\"button\" id=\"moveupCond\" (click)=\"moveConditionUp(conditionGroup)\"\r\n                    title=\"{{'Move up the Condition'|translate}}\" [disabled]=\"conditionGroup.disableMoveUp\" translate>\r\n                    <i class=\"ias-icon ias-icon-flow_goto_prev_thick\"></i>\r\n                  </button>\r\n                  <button class=\"btn btn-icon\" role=\"button\" id=\"movedownCond\" (click)=\"moveConditionDown(conditionGroup)\"\r\n                    title=\"{{'Move down the Condition'|translate}}\" [disabled]=\"conditionGroup.disableMoveDown\" translate>\r\n                    <i class=\"ias-icon ias-icon-flow_goto_next_thick\"></i>\r\n                  </button>\r\n                </div>\r\n                <div class=\"displayInline\">\r\n                  <table class=\"ias-table innerTable\">\r\n                    <tbody>\r\n                      <div [id]=\"'condition-' + i + '-' + j\" *ngFor=\"let condition of conditionGroup.conditions let j = index;\">\r\n                        <td>\r\n                          <div class=\"toggleWidth\">\r\n                            <label class=\"checkbox-inline ias-checkbox\">\r\n                              <input id=\"task\" type=\"checkbox\" [(ngModel)]=\"condition.isChecked\"\r\n                                (click)=\"selectCondition(condition, conditionGroup)\">\r\n                                <i class=\"ias-icon ias-icon-check_thick\"></i>\r\n                              <span class=\"checkbox-label empty\"></span>\r\n                            </label>\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <!-- <div class=\"conditionContent\"> -->\r\n                          <select [(ngModel)]=\"condition.name\" class=\"itemSpacing\" id=\"driver-state\">\r\n                            <option value=\"null\" disabled>{{ selectNewConditionString }}</option>\r\n                            <option *ngFor=\"let key of keyValues\" [id]=\"key\">\r\n                              {{ key }}\r\n                            </option>\r\n                          </select>\r\n                          <ng-template [ngIf]=\"condition.name === getTanslatedVal('Driver State')\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.state\" id=\"state-values\">\r\n                              <option *ngFor=\"let state of stateValues\" [id]=\"state\">\r\n                                {{ state }}\r\n                              </option>\r\n                            </select>\r\n                          </ng-template>\r\n                          <ng-template [ngIf]=\"condition.name === getTanslatedVal('Driver in Cache Overflow')\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.boolState\" id=\"cache-overflow\">\r\n                              <option *ngFor=\"let boolState of booleanStateValues\" [id]=\"boolState\">\r\n                                {{ boolState }}\r\n                              </option>\r\n                            </select>\r\n                          </ng-template>\r\n                          <ng-template\r\n                            [ngIf]=\"condition.name === getTanslatedVal('Newest') || condition.name === getTanslatedVal('Oldest')\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.newOldOp\" id=\"oldest\">\r\n                              <option *ngFor=\"let newOldOp of newOldOperatorValues\" [id]=\"newOldOp\">\r\n                                {{ newOldOp }}\r\n                              </option>\r\n                            </select>\r\n                            <input class=\"itemSpacing\" id=\"size-input\" type=\"number\" (keydown)=\"validInput($event)\" (focusout)=\"validNumber(condition.ms)\" [(ngModel)]=\"condition.ms\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.newOldTimeUnit\">\r\n                              <option *ngFor=\"let timeUnit of timeUnitValues\" [id]=\"timeUnit\">\r\n                                {{ timeUnit }}\r\n                              </option>\r\n                            </select>\r\n                          </ng-template>\r\n                          <ng-template\r\n                            [ngIf]=\"condition.name === getTanslatedVal('Total Size') || condition.name === getTanslatedVal('Unprocessed Size')\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.op\" id=\"unprocessed-size\">\r\n                              <option *ngFor=\"let op of operatorValues\" [id]=\"op\">\r\n                                {{ op }}\r\n                              </option>\r\n                            </select>\r\n                            <input class=\"itemSpacing\" id=\"bytes\" type=\"number\" (keydown)=\"validInput($event)\" (focusout)=\"validNumber(condition.value)\" [(ngModel)]=\"condition.value\">\r\n                            <span class=\"itemSpacing\" translate=\"\">bytes</span>\r\n                          </ng-template>\r\n                          <ng-template [ngIf]=\"condition.name === getTanslatedVal('Unprocessed Transactions')\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.transaction\" id=\"Unprocessed-transactions\">\r\n                              <option *ngFor=\"let trans of unprocessedTransactionValues\" [id]=\"trans\">\r\n                                {{ trans }}\r\n                              </option>\r\n                            </select>\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.op\" id=\"ops\">\r\n                              <option *ngFor=\"let op of operatorValues\" [id]=\"op\">\r\n                                {{ op }}\r\n                              </option>\r\n                            </select>\r\n                            <input class=\"itemSpacing\" type=\"number\" id=\"Unprocessed-num\" (keydown)=\"validInput($event)\"  (focusout)=\"validNumber(condition.value)\" [(ngModel)]=\"condition.value\">\r\n                          </ng-template>\r\n                          <ng-template [ngIf]=\"condition.name === getTanslatedVal('Transactions History')\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.historyTransaction\" id=\"transaction-history\">\r\n                              <option *ngFor=\"let trans of transactionHistoryValues\" [id]=\"trans\">\r\n                                {{ trans }}\r\n                              </option>\r\n                            </select>\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.op\" id=\"transaction-history-num\">\r\n                              <option *ngFor=\"let op of operatorValues\" [id]=\"op\">\r\n                                {{ op }}\r\n                              </option>\r\n                            </select>\r\n                            <input class=\"itemSpacing\" type=\"number\" id=\"th-num\"(keydown)=\"validInput($event)\" (focusout)=\"validNumber(condition.value)\" [(ngModel)]=\"condition.value\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.source\" id=\"csource\">\r\n                              <option *ngFor=\"let src of sourceValues\" [id]=\"src\">\r\n                                {{ src }}\r\n                              </option>\r\n                            </select>\r\n                            <span class=\"itemSpacing\" translate>over the last</span>\r\n                            <input class=\"itemSpacing\" type=\"number\"  id=\"v-num\" (keydown)=\"validInput($event)\"  (focusout)=\"validNumber(condition.overLast)\" [(ngModel)]=\"condition.overLast\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.historyTransactionTimeUnit\" id=\"historyTransactionTimeUnit\">\r\n                              <option *ngFor=\"let timeUnit of availableHistoryTimeUnitValues\" [id]=\"timeUnit\">\r\n                                {{ timeUnit }}\r\n                              </option>\r\n                            </select>\r\n                          </ng-template>\r\n                          <ng-template [ngIf]=\"condition.name === getTanslatedVal('Available History')\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.op\" id=\"avaialable-history\">\r\n                              <option *ngFor=\"let op of operatorValues\" [id]=\"op\">\r\n                                {{ op }}\r\n                              </option>\r\n                            </select>\r\n                            <input class=\"itemSpacing\" type=\"number\" id=\"mins\" (keydown)=\"validInput($event)\"  (focusout)=\"validNumber(condition.minutes)\" [(ngModel)]=\"condition.minutes\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.availableHistoryTimeUnit\" id=\"availableHistoryTimeUnit\">\r\n                              <option *ngFor=\"let timeUnit of availableHistoryTimeUnitValues\" [id]=\"timeUnit\">\r\n                                {{ timeUnit }}\r\n                              </option>\r\n                            </select>\r\n                          </ng-template>\r\n                          <!-- </div> -->\r\n                        </td>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <a class=\"spacer-out-left-sm\" id=\"addNewCondition\" (click)=\"addNewCondition(conditionGroup)\" translate>Add new condition</a>\r\n                      </div>\r\n                    </tbody>\r\n                  </table>\r\n                </div>": "<div class=\"marginBottom\">\r\n                  <select [(ngModel)]=\"conditionGroup.operator\" id=\"cg-operator\">\r\n                    <option id=\"cg-add\" value = 'AND' translate>AND</option>\r\n                    <option id=\"cg=or\" value = 'OR' translate>OR</option>\r\n                  </select>\r\n                  <button class=\"btn btn-icon\" role=\"button\" id=\"createCond\" (click)=\"addNewCondition(conditionGroup)\"\r\n                    title=\"{{'Add New Condition'|translate}}\" [disabled]=\"conditionGroup.disableAdd\" translate>\r\n                    <i class=\"ias-icon ias-icon-new_thick\"></i>\r\n                  </button>\r\n                  <button class=\"btn btn-icon\" role=\"button\" id=\"delCond\" (click)=\"onDeleteCondition(conditionGroup)\"\r\n                    title=\"{{'Delete Condition'|translate}}\" [disabled]=\"conditionGroup.disableDelete\" translate>\r\n                    <i class=\"ias-icon ias-icon-delete_thick\"></i>\r\n                  </button>\r\n                  <button class=\"btn btn-icon\" role=\"button\" id=\"moveupCond\" (click)=\"moveConditionUp(conditionGroup)\"\r\n                    title=\"{{'Move up the Condition'|translate}}\" [disabled]=\"conditionGroup.disableMoveUp\" translate>\r\n                    <i class=\"ias-icon ias-icon-flow_goto_prev_thick\"></i>\r\n                  </button>\r\n                  <button class=\"btn btn-icon\" role=\"button\" id=\"movedownCond\" (click)=\"moveConditionDown(conditionGroup)\"\r\n                    title=\"{{'Move down the Condition'|translate}}\" [disabled]=\"conditionGroup.disableMoveDown\" translate>\r\n                    <i class=\"ias-icon ias-icon-flow_goto_next_thick\"></i>\r\n                  </button>\r\n                </div>\r\n                <div class=\"displayInline\">\r\n                  <table class=\"ias-table innerTable\">\r\n                    <tbody>\r\n                      <div [id]=\"'condition-' + i + '-' + j\" *ngFor=\"let condition of conditionGroup.conditions let j = index;\">\r\n                        <td>\r\n                          <div class=\"toggleWidth\">\r\n                            <label class=\"checkbox-inline ias-checkbox\">\r\n                              <input id=\"task\" type=\"checkbox\" [(ngModel)]=\"condition.isChecked\"\r\n                                (click)=\"selectCondition(condition, conditionGroup)\">\r\n                                <i class=\"ias-icon ias-icon-check_thick\"></i>\r\n                              <span class=\"checkbox-label empty\"></span>\r\n                            </label>\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <!-- <div class=\"conditionContent\"> -->\r\n                          <select [(ngModel)]=\"condition.name\" class=\"itemSpacing\" id=\"driver-state\">\r\n                            <option value=\"null\" disabled>{{ selectNewConditionString }}</option>\r\n                            <option *ngFor=\"let key of keyValues\" [id]=\"key\">\r\n                              {{ key }}\r\n                            </option>\r\n                          </select>\r\n                          <ng-template [ngIf]=\"condition.name === getTanslatedVal('Driver State')\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.state\" id=\"state-values\">\r\n                              <option *ngFor=\"let state of stateValues\" [id]=\"state\">\r\n                                {{ state }}\r\n                              </option>\r\n                            </select>\r\n                          </ng-template>\r\n                          <ng-template [ngIf]=\"condition.name === getTanslatedVal('Driver in Cache Overflow')\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.boolState\" id=\"cache-overflow\">\r\n                              <option *ngFor=\"let boolState of booleanStateValues\" [id]=\"boolState\">\r\n                                {{ boolState }}\r\n                              </option>\r\n                            </select>\r\n                          </ng-template>\r\n                          <ng-template\r\n                            [ngIf]=\"condition.name === getTanslatedVal('Newest') || condition.name === getTanslatedVal('Oldest')\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.newOldOp\" id=\"oldest\">\r\n                              <option *ngFor=\"let newOldOp of newOldOperatorValues\" [id]=\"newOldOp\">\r\n                                {{ newOldOp }}\r\n                              </option>\r\n                            </select>\r\n                            <input class=\"itemSpacing\" id=\"size-input\" type=\"number\" (keydown)=\"validInput($event)\" (focusout)=\"validNumber(condition.ms)\" [(ngModel)]=\"condition.ms\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.newOldTimeUnit\">\r\n                              <option *ngFor=\"let timeUnit of timeUnitValues\" [id]=\"timeUnit\">\r\n                                {{ timeUnit }}\r\n                              </option>\r\n                            </select>\r\n                          </ng-template>\r\n                          <ng-template\r\n                            [ngIf]=\"condition.name === getTanslatedVal('Total Size') || condition.name === getTanslatedVal('Unprocessed Size')\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.op\" id=\"unprocessed-size\">\r\n                              <option *ngFor=\"let op of operatorValues\" [id]=\"op\">\r\n                                {{ op }}\r\n                              </option>\r\n                            </select>\r\n                            <input class=\"itemSpacing\" id=\"bytes\" type=\"number\" (keydown)=\"validInput($event)\" (focusout)=\"validNumber(condition.value)\" [(ngModel)]=\"condition.value\">\r\n                            <span class=\"itemSpacing\" translate=\"\">bytes</span>\r\n                          </ng-template>\r\n                          <ng-template [ngIf]=\"condition.name === getTanslatedVal('Unprocessed Transactions')\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.transaction\" id=\"Unprocessed-transactions\">\r\n                              <option *ngFor=\"let trans of unprocessedTransactionValues\" [id]=\"trans\">\r\n                                {{ trans }}\r\n                              </option>\r\n                            </select>\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.op\" id=\"ops\">\r\n                              <option *ngFor=\"let op of operatorValues\" [id]=\"op\">\r\n                                {{ op }}\r\n                              </option>\r\n                            </select>\r\n                            <input class=\"itemSpacing\" type=\"number\" id=\"Unprocessed-num\" (keydown)=\"validInput($event)\"  (focusout)=\"validNumber(condition.value)\" [(ngModel)]=\"condition.value\">\r\n                          </ng-template>\r\n                          <ng-template [ngIf]=\"condition.name === getTanslatedVal('Transactions History')\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.historyTransaction\" id=\"transaction-history\">\r\n                              <option *ngFor=\"let trans of transactionHistoryValues\" [id]=\"trans\">\r\n                                {{ trans }}\r\n                              </option>\r\n                            </select>\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.op\" id=\"transaction-history-num\">\r\n                              <option *ngFor=\"let op of operatorValues\" [id]=\"op\">\r\n                                {{ op }}\r\n                              </option>\r\n                            </select>\r\n                            <input class=\"itemSpacing\" type=\"number\" id=\"th-num\"(keydown)=\"validInput($event)\" (focusout)=\"validNumber(condition.value)\" [(ngModel)]=\"condition.value\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.source\" id=\"csource\">\r\n                              <option *ngFor=\"let src of sourceValues\" [id]=\"src\">\r\n                                {{ src }}\r\n                              </option>\r\n                            </select>\r\n                            <span class=\"itemSpacing\" translate>over the last</span>\r\n                            <input class=\"itemSpacing\" type=\"number\"  id=\"v-num\" (keydown)=\"validInput($event)\"  (focusout)=\"validNumber(condition.overLast)\" [(ngModel)]=\"condition.overLast\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.historyTransactionTimeUnit\" id=\"historyTransactionTimeUnit\">\r\n                              <option *ngFor=\"let timeUnit of availableHistoryTimeUnitValues\" [id]=\"timeUnit\">\r\n                                {{ timeUnit }}\r\n                              </option>\r\n                            </select>\r\n                          </ng-template>\r\n                          <ng-template [ngIf]=\"condition.name === getTanslatedVal('Available History')\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.op\" id=\"avaialable-history\">\r\n                              <option *ngFor=\"let op of operatorValues\" [id]=\"op\">\r\n                                {{ op }}\r\n                              </option>\r\n                            </select>\r\n                            <input class=\"itemSpacing\" type=\"number\" id=\"mins\" (keydown)=\"validInput($event)\"  (focusout)=\"validNumber(condition.minutes)\" [(ngModel)]=\"condition.minutes\">\r\n                            <select class=\"itemSpacing\" [(ngModel)]=\"condition.availableHistoryTimeUnit\" id=\"availableHistoryTimeUnit\">\r\n                              <option *ngFor=\"let timeUnit of availableHistoryTimeUnitValues\" [id]=\"timeUnit\">\r\n                                {{ timeUnit }}\r\n                              </option>\r\n                            </select>\r\n                          </ng-template>\r\n                          <!-- </div> -->\r\n                        </td>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <a class=\"spacer-out-left-sm\" id=\"addNewCondition\" (click)=\"addNewCondition(conditionGroup)\" translate>Add new condition</a>\r\n                      </div>\r\n                    </tbody>\r\n                  </table>\r\n                </div>",
  "<div class=\"marginBottom\">\r\n                  <select class=\"marginBottom\" [(ngModel)]=\"action.name\" (change)=\"changeAction(action)\" id=\"action-menu\">\r\n                    <option value=\"null\" disabled>{{ selectNewActionString }}</option>\r\n                    <option *ngFor=\"let actionName of actionNameValues\" [id]=\"actionName\">\r\n                      {{ actionName }}\r\n                    </option>\r\n                  </select>\r\n                  <ng-template [ngIf]=\"action.name === getTanslatedVal('Send Email')\">\r\n                    <div class=\"marginLeft marginBottom\">\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"to-lbl\" translate>\r\n                            To:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id =\"to-val\"class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.to\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label  id=\"cc-lbl\" translate>\r\n                            CC:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input  id=\"cc-val\"class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.cc\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"bcc-lbl\" translate>\r\n                            BCC:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"bcc-val\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.bcc\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"rplt-to-lbl\"  translate>\r\n                            Reply-to:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"rplt-to-val\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.replyTo\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"email-tmp-lbl\" translate>\r\n                            Email Template:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"email-tmp-val\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.templateDN\">\r\n                        </div>\r\n                        <div class=\"operator-class\">\r\n                          <button class=\"btn btn-icon\" [attr.data-target]=\"'#' + emailObjectBrowserID\"\r\n                             (click)=\"setEmailObjectBrowserFlag(i);$event.stopPropagation()\" data-toggle=\"modal\"  type=\"button\"\r\n                            id=\"email-temp-id\"\r\n                            title=\"{{'Search Template'|translate}}\" translate>\r\n                            <i class=\"icon icon-search\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template [ngIf]=\"action.name === getTanslatedVal('Write Trace Message')\">\r\n                    <div class=\"marginLeft marginBottom\">\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label  id=\"level-lbl\" translate>\r\n                            Level:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"level\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.level\">\r\n                        </div>\r\n                        <div class=\"operator-class\" translate>\r\n                          &nbsp;&nbsp;(default = 0)\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label  id=\"color-lbl\" translate>\r\n                            Color:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <select [(ngModel)]=\"action.color\" id=\"colors\">\r\n                            <option *ngFor=\"let color of colorValues\" [id]=\"color\">\r\n                              {{ color }}\r\n                            </option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label  id=\"message-lbl\" translate>\r\n                            Message:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"message\" class=\"messageWidth\" type=\"text\" [(ngModel)]=\"action.message\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template [ngIf]=\"action.name === getTanslatedVal('Generate Event')\">\r\n                    <div class=\"marginLeft marginBottom\">\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"id-lbl\" translate>\r\n                            ID:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"id-val\" class=\"fieldWidth\" type=\"number\" (keydown)=\"validInput($event)\" (focusout)=\"validNumber(action.id)\" (focusout)=\"validNumber(action.id)\" [(ngModel)]=\"action.id\">\r\n                        </div>\r\n                        <div class=\"operator-class\" translate>\r\n                          &nbsp;&nbsp;(integer between 1000 and 1999)\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"log-lvl-lbl\" translate>\r\n                            Log level:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <select [(ngModel)]=\"action.logLevel\" id=\"log-lvl\">\r\n                            <option *ngFor=\"let logLevel of logLevelValues\" [id]=\"loglevel\">\r\n                              {{ logLevel }}\r\n                            </option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"ad-data-lbl\" translate>\r\n                            Additional Data:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class inlineFlexDisplay\">\r\n                          <select [(ngModel)]=\"action.selectedEventArg\" class=\"fieldWidth\" size=\"5\" id=\"additionaldata\">\r\n                            <option *ngFor=\"let eventArg of action.eventArgs\" [id]=\"eventArg\">\r\n                              {{ getEventArgDisplayName(eventArg)}}\r\n                            </option>\r\n                          </select>\r\n                        </div>\r\n                        <div class=\"operator-class\">\r\n                          <button id=\"openaddevent\" class=\"btn btn-icon\" role=\"button\" title=\"{{'Add item'|translate}}\"\r\n                            (click)=\"openAddEventModal(action)\" translate>\r\n                            <i class=\"icon icon-plus\"></i>\r\n                          </button>\r\n                          <button id=\"openmodifyevent\" class=\"btn btn-icon\" role=\"button\" title=\"{{ 'Modify item' | translate }}\"\r\n                            [disabled]=\"action.eventArgs.length == 0\" (click)=\"openModifyEventModal(action)\" translate>\r\n                            <i class=\"icon icon-pencil\"></i>\r\n                          </button>\r\n                          <button id=\"deleteevent\" class=\"btn btn-icon\" role=\"button\" title=\"{{ 'Delete item' | translate }}\"\r\n                            [disabled]=\"action.eventArgs.length == 0\" (click)=\"deleteEventVal(action)\" translate>\r\n                            <i class=\"icon icon-trash\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template [ngIf]=\"action.name === getTanslatedVal('Execute ECMAScript')\">\r\n                    <div class=\"marginBottom\">\r\n                      <div class=\"panel-label\">\r\n                        <label id=\"ecma-lbl\" translate>\r\n                          ECMAScript resource:<span class=\"important\">*</span>\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"panel-class\">\r\n                        <input id=\"ecma\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.resourceDN\">\r\n                      </div>\r\n                      <div class=\"operator-class\">\r\n                        <button class=\"btn btn-icon\" [attr.data-target]=\"'#' + ecmaObjectBrowserID\"\r\n                           data-toggle=\"modal\"  type=\"button\" id=\"ecma-search\" (click)=\"importEscript(i); $event.stopPropagation()\"\r\n                          title=\"{{'Search Resource'|translate}}\" translate>\r\n                          <i class=\"icon icon-search\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template [ngIf]=\"action.name === getTanslatedVal('Start Workflow')\">\r\n                    <div class=\"marginLeft marginBottom\">\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"provison-lbl\" translate>\r\n                            Provisioning request DN:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"provisioning-dn\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.provRequestDN\">\r\n                        </div>\r\n                        <div class=\"operator-class\">\r\n                          <button class=\"btn btn-icon\" [attr.data-target]=\"'#' + provObjectBrowserID\"\r\n                            data-toggle=\"modal\"  type=\"button\" id=\"provision-request-dn\"\r\n                            title=\"{{'Search Provision Request DN'|translate}}\">\r\n                            <i class=\"icon icon-search\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"usr-app-lbl\" translate>User Application URL:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"user-app-url\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.userAppUrl\" disabled>\r\n                        </div>\r\n                        <div class=\"operator-class panel-class\">\r\n                          <label id=\"extracted-lbl\" translate>(extracted from Provisioning Request)</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"auth-usr-lbl\" translate>\r\n                            Authorized user DN:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"authorized-dn\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.authuserdn\" disabled>\r\n                        </div>\r\n                        <div class=\"operator-class panel-class\">\r\n                          <label id=\"extrct-lbl\" translate>(extracted from Provisioning Request)\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"auth-pwd-lbl\" translate>Authorized user password:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"auth-pwd\" class=\"fieldWidth\" type=\"password\" [(ngModel)]=\"action.authpkwd\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"vfy-pwd-lbl\" translate>Verify password:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"verify-pwd\" class=\"fieldWidth\" type=\"password\" [(ngModel)]=\"action.vpkwd\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"rcpient-dn-lbl\" translate>\r\n                            Recipient DN:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"recipient-dn\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.recipientDN\">\r\n                        </div>\r\n                        <div class=\"operator-class\">\r\n                          <button class=\"btn btn-icon\" [attr.data-target]=\"'#' + ObjectBrowserID\"\r\n                            data-toggle=\"modal\"  type=\"button\" id=\"search-user\"\r\n                            title=\"{{'Search User'|translate}}\" translate>\r\n                            <i class=\"icon icon-search\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label v-align-top\">\r\n                          <label id=\"add-data-lbls\" translate>\r\n                            Additional Data:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class inlineFlexDisplay\">\r\n                          <select [(ngModel)]=\"action.selectedWfArg\" class=\"fieldWidth\" size=\"5\" id=\"wrkflow\">\r\n                            <option *ngFor=\"let eventArg of action.workflowargvalues\" [id]=\"eventArg\">\r\n                              {{ getWorkArgDisplayName(eventArg)}}\r\n                            </option>\r\n                          </select>\r\n                        </div>\r\n                        <div class=\"operator-class v-align-top\">\r\n                          <button class=\"btn btn-icon\" role=\"button\" title=\"{{'Add new workflow argument'|translate}}\" id=\"openwrkflow\"\r\n                            (click)=\"openAddWorkFlowEvent(action)\" translate>\r\n                            <i class=\"icon icon-plus\"></i>\r\n                          </button>\r\n                          <button class=\"btn btn-icon\" role=\"button\" title=\"{{ 'Modify selected workflow argument' | translate }}\" id=\"modifywrkflw\"\r\n                            [disabled]=\"action.workflowargvalues.length == 0\" (click)=\"openModifyWfArgModal(action)\" translate>\r\n                            <i class=\"icon icon-pencil\"></i>\r\n                          </button>\r\n                          <button class=\"btn btn-icon\" role=\"button\" title=\"{{ 'Remove selected workflow argument' | translate }}\" id=\"deletewrkflw\"\r\n                            [disabled]=\"action.workflowargvalues.length == 0\" (click)=\"deleteActionWorkFlowArgument(action)\" translate>\r\n                            <i class=\"icon icon-trash\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template [ngIf]=\"action.name === getTanslatedVal('On Error')\">\r\n                    <div class=\"marginBottom\">\r\n                      <div class=\"panel-label\">\r\n                        <label translate id=\"affectState-lbl\">\r\n                          Affect state by:\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"panel-class\">\r\n                        <select [(ngModel)]=\"action.actions\" id=\"state-by\">\r\n                          <option *ngFor=\"let errAction of errorActionValues\" [id]=\"errAction\">\r\n                            {{ errAction }}\r\n                          </option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"marginBottom\">\r\n                      <div class=\"panel-label\">\r\n                        <label id=\"affect-driver\" translate>\r\n                          Affect Driver Health Job by:\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"panel-class\">\r\n                        <select [(ngModel)]=\"action.state\" id=\"err-stat\">\r\n                          <option *ngFor=\"let errState of errorStateValues\" [id]=\"errState\">\r\n                            {{ errState }}\r\n                          </option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"marginBottom\">\r\n                      <div class=\"panel-label\">\r\n                        <label id=\"affect-actions-by\" translate>\r\n                          Affect actions by:\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"panel-class\">\r\n                        <select [(ngModel)]=\"action.job\" id=\"action-job\">\r\n                          <option *ngFor=\"let errJob of errorJobValues\" [id]=\"errJob\">\r\n                            {{ errJob }}\r\n                          </option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                </div>": "<div class=\"marginBottom\">\r\n                  <select class=\"marginBottom\" [(ngModel)]=\"action.name\" (change)=\"changeAction(action)\" id=\"action-menu\">\r\n                    <option value=\"null\" disabled>{{ selectNewActionString }}</option>\r\n                    <option *ngFor=\"let actionName of actionNameValues\" [id]=\"actionName\">\r\n                      {{ actionName }}\r\n                    </option>\r\n                  </select>\r\n                  <ng-template [ngIf]=\"action.name === getTanslatedVal('Send Email')\">\r\n                    <div class=\"marginLeft marginBottom\">\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"to-lbl\" translate>\r\n                            To:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id =\"to-val\"class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.to\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label  id=\"cc-lbl\" translate>\r\n                            CC:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input  id=\"cc-val\"class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.cc\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"bcc-lbl\" translate>\r\n                            BCC:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"bcc-val\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.bcc\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"rplt-to-lbl\"  translate>\r\n                            Reply-to:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"rplt-to-val\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.replyTo\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"email-tmp-lbl\" translate>\r\n                            Email Template:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"email-tmp-val\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.templateDN\">\r\n                        </div>\r\n                        <div class=\"operator-class\">\r\n                          <button class=\"btn btn-icon\" [attr.data-target]=\"'#' + emailObjectBrowserID\"\r\n                             (click)=\"setEmailObjectBrowserFlag(i);$event.stopPropagation()\" data-toggle=\"modal\"  type=\"button\"\r\n                            id=\"email-temp-id\"\r\n                            title=\"{{'Search Template'|translate}}\" translate>\r\n                            <i class=\"icon icon-search\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template [ngIf]=\"action.name === getTanslatedVal('Write Trace Message')\">\r\n                    <div class=\"marginLeft marginBottom\">\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label  id=\"level-lbl\" translate>\r\n                            Level:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"level\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.level\">\r\n                        </div>\r\n                        <div class=\"operator-class\" translate>\r\n                          &nbsp;&nbsp;(default = 0)\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label  id=\"color-lbl\" translate>\r\n                            Color:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <select [(ngModel)]=\"action.color\" id=\"colors\">\r\n                            <option *ngFor=\"let color of colorValues\" [id]=\"color\">\r\n                              {{ color }}\r\n                            </option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label  id=\"message-lbl\" translate>\r\n                            Message:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"message\" class=\"messageWidth\" type=\"text\" [(ngModel)]=\"action.message\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template [ngIf]=\"action.name === getTanslatedVal('Generate Event')\">\r\n                    <div class=\"marginLeft marginBottom\">\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"id-lbl\" translate>\r\n                            ID:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"id-val\" class=\"fieldWidth\" type=\"number\" (keydown)=\"validInput($event)\" (focusout)=\"validNumber(action.id)\" (focusout)=\"validNumber(action.id)\" [(ngModel)]=\"action.id\">\r\n                        </div>\r\n                        <div class=\"operator-class\" translate>\r\n                          &nbsp;&nbsp;(integer between 1000 and 1999)\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"log-lvl-lbl\" translate>\r\n                            Log level:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <select [(ngModel)]=\"action.logLevel\" id=\"log-lvl\">\r\n                            <option *ngFor=\"let logLevel of logLevelValues\" [id]=\"loglevel\">\r\n                              {{ logLevel }}\r\n                            </option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"ad-data-lbl\" translate>\r\n                            Additional Data:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class inlineFlexDisplay\">\r\n                          <select [(ngModel)]=\"action.selectedEventArg\" class=\"fieldWidth\" size=\"5\" id=\"additionaldata\">\r\n                            <option *ngFor=\"let eventArg of action.eventArgs\" [id]=\"eventArg\">\r\n                              {{ getEventArgDisplayName(eventArg)}}\r\n                            </option>\r\n                          </select>\r\n                        </div>\r\n                        <div class=\"operator-class\">\r\n                          <button id=\"openaddevent\" class=\"btn btn-icon\" role=\"button\" title=\"{{'Add item'|translate}}\"\r\n                            (click)=\"openAddEventModal(action)\" translate>\r\n                            <i class=\"icon icon-plus\"></i>\r\n                          </button>\r\n                          <button id=\"openmodifyevent\" class=\"btn btn-icon\" role=\"button\" title=\"{{ 'Modify item' | translate }}\"\r\n                            [disabled]=\"action.eventArgs.length == 0\" (click)=\"openModifyEventModal(action)\" translate>\r\n                            <i class=\"icon icon-pencil\"></i>\r\n                          </button>\r\n                          <button id=\"deleteevent\" class=\"btn btn-icon\" role=\"button\" title=\"{{ 'Delete item' | translate }}\"\r\n                            [disabled]=\"action.eventArgs.length == 0\" (click)=\"deleteEventVal(action)\" translate>\r\n                            <i class=\"icon icon-trash\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template [ngIf]=\"action.name === getTanslatedVal('Execute ECMAScript')\">\r\n                    <div class=\"marginBottom\">\r\n                      <div class=\"panel-label\">\r\n                        <label id=\"ecma-lbl\" translate>\r\n                          ECMAScript resource:<span class=\"important\">*</span>\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"panel-class\">\r\n                        <input id=\"ecma\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.resourceDN\">\r\n                      </div>\r\n                      <div class=\"operator-class\">\r\n                        <button class=\"btn btn-icon\" [attr.data-target]=\"'#' + ecmaObjectBrowserID\"\r\n                           data-toggle=\"modal\"  type=\"button\" id=\"ecma-search\" (click)=\"importEscript(i); $event.stopPropagation()\"\r\n                          title=\"{{'Search Resource'|translate}}\" translate>\r\n                          <i class=\"icon icon-search\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template [ngIf]=\"action.name === getTanslatedVal('Start Workflow')\">\r\n                    <div class=\"marginLeft marginBottom\">\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"provison-lbl\" translate>\r\n                            Provisioning request DN:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"provisioning-dn\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.provRequestDN\">\r\n                        </div>\r\n                        <div class=\"operator-class\">\r\n                          <button class=\"btn btn-icon\" [attr.data-target]=\"'#' + provObjectBrowserID\"\r\n                            data-toggle=\"modal\"  type=\"button\" id=\"provision-request-dn\"\r\n                            title=\"{{'Search Provision Request DN'|translate}}\">\r\n                            <i class=\"icon icon-search\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"usr-app-lbl\" translate>User Application URL:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"user-app-url\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.userAppUrl\" disabled>\r\n                        </div>\r\n                        <div class=\"operator-class panel-class\">\r\n                          <label id=\"extracted-lbl\" translate>(extracted from Provisioning Request)</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"auth-usr-lbl\" translate>\r\n                            Authorized user DN:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"authorized-dn\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.authuserdn\" disabled>\r\n                        </div>\r\n                        <div class=\"operator-class panel-class\">\r\n                          <label id=\"extrct-lbl\" translate>(extracted from Provisioning Request)\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"auth-pwd-lbl\" translate>Authorized user password:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"auth-pwd\" class=\"fieldWidth\" type=\"password\" [(ngModel)]=\"action.authpkwd\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"vfy-pwd-lbl\" translate>Verify password:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"verify-pwd\" class=\"fieldWidth\" type=\"password\" [(ngModel)]=\"action.vpkwd\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label\">\r\n                          <label id=\"rcpient-dn-lbl\" translate>\r\n                            Recipient DN:<span class=\"important\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class\">\r\n                          <input id=\"recipient-dn\" class=\"fieldWidth\" type=\"text\" [(ngModel)]=\"action.recipientDN\">\r\n                        </div>\r\n                        <div class=\"operator-class\">\r\n                          <button class=\"btn btn-icon\" [attr.data-target]=\"'#' + ObjectBrowserID\"\r\n                            data-toggle=\"modal\"  type=\"button\" id=\"search-user\"\r\n                            title=\"{{'Search User'|translate}}\" translate>\r\n                            <i class=\"icon icon-search\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"marginBottom\">\r\n                        <div class=\"panel-label v-align-top\">\r\n                          <label id=\"add-data-lbls\" translate>\r\n                            Additional Data:\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"panel-class inlineFlexDisplay\">\r\n                          <select [(ngModel)]=\"action.selectedWfArg\" class=\"fieldWidth\" size=\"5\" id=\"wrkflow\">\r\n                            <option *ngFor=\"let eventArg of action.workflowargvalues\" [id]=\"eventArg\">\r\n                              {{ getWorkArgDisplayName(eventArg)}}\r\n                            </option>\r\n                          </select>\r\n                        </div>\r\n                        <div class=\"operator-class v-align-top\">\r\n                          <button class=\"btn btn-icon\" role=\"button\" title=\"{{'Add new workflow argument'|translate}}\" id=\"openwrkflow\"\r\n                            (click)=\"openAddWorkFlowEvent(action)\" translate>\r\n                            <i class=\"icon icon-plus\"></i>\r\n                          </button>\r\n                          <button class=\"btn btn-icon\" role=\"button\" title=\"{{ 'Modify selected workflow argument' | translate }}\" id=\"modifywrkflw\"\r\n                            [disabled]=\"action.workflowargvalues.length == 0\" (click)=\"openModifyWfArgModal(action)\" translate>\r\n                            <i class=\"icon icon-pencil\"></i>\r\n                          </button>\r\n                          <button class=\"btn btn-icon\" role=\"button\" title=\"{{ 'Remove selected workflow argument' | translate }}\" id=\"deletewrkflw\"\r\n                            [disabled]=\"action.workflowargvalues.length == 0\" (click)=\"deleteActionWorkFlowArgument(action)\" translate>\r\n                            <i class=\"icon icon-trash\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template [ngIf]=\"action.name === getTanslatedVal('On Error')\">\r\n                    <div class=\"marginBottom\">\r\n                      <div class=\"panel-label\">\r\n                        <label translate id=\"affectState-lbl\">\r\n                          Affect state by:\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"panel-class\">\r\n                        <select [(ngModel)]=\"action.actions\" id=\"state-by\">\r\n                          <option *ngFor=\"let errAction of errorActionValues\" [id]=\"errAction\">\r\n                            {{ errAction }}\r\n                          </option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"marginBottom\">\r\n                      <div class=\"panel-label\">\r\n                        <label id=\"affect-driver\" translate>\r\n                          Affect Driver Health Job by:\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"panel-class\">\r\n                        <select [(ngModel)]=\"action.state\" id=\"err-stat\">\r\n                          <option *ngFor=\"let errState of errorStateValues\" [id]=\"errState\">\r\n                            {{ errState }}\r\n                          </option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"marginBottom\">\r\n                      <div class=\"panel-label\">\r\n                        <label id=\"affect-actions-by\" translate>\r\n                          Affect actions by:\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"panel-class\">\r\n                        <select [(ngModel)]=\"action.job\" id=\"action-job\">\r\n                          <option *ngFor=\"let errJob of errorJobValues\" [id]=\"errJob\">\r\n                            {{ errJob }}\r\n                          </option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                </div>",
  "<i class=\" ias-icon ias-icon-edit_doc stop-propogation\"></i>\r\n                <span class=\"sr-only\" translate>Edit XML</span>": "<i class=\" ias-icon ias-icon-edit_doc stop-propogation\"></i>\r\n                <span class=\"sr-only\" translate>Edit XML</span>",
  "<i class=\"ias-icon ias-icon-add_column\"></i>": "<i class=\"ias-icon ias-icon-add_column\"></i>",
  "<i class=\"ias-icon ias-icon-add_row\"></i>": "<i class=\"ias-icon ias-icon-add_row\"></i>",
  "<i class=\"ias-icon ias-icon-attribute_add\"></i>": "<i class=\"ias-icon ias-icon-attribute_add\"></i>",
  "<i class=\"ias-icon ias-icon-class_add\"></i>": "<i class=\"ias-icon ias-icon-class_add\"></i>",
  "<i class=\"ias-icon ias-icon-delete_thick\"></i>": "<i class=\"ias-icon ias-icon-delete_thick\"></i>",
  "<i class=\"ias-icon ias-icon-export_to_doc_thin \"></i>": "<i class=\"ias-icon ias-icon-export_to_doc_thin \"></i>",
  "<i class=\"ias-icon ias-icon-flow_goto_next_thick\"></i>": "<i class=\"ias-icon ias-icon-flow_goto_next_thick\"></i>",
  "<i class=\"ias-icon ias-icon-flow_goto_prev_thick\"></i>": "<i class=\"ias-icon ias-icon-flow_goto_prev_thick\"></i>",
  "<i class=\"ias-icon ias-icon-new_thick\"></i>": "<i class=\"ias-icon ias-icon-new_thick\"></i>",
  "<i class=\"ias-icon ias-icon-reload_refresh_thin\"></i>": "<i class=\"ias-icon ias-icon-reload_refresh_thin\"></i>",
  "<i class=\"ias-icon ias-icon-save_thick\"></i>": "<i class=\"ias-icon ias-icon-save_thick\"></i>",
  "<i class=\"ias-icon ias-icon-start_thick\"></i>": "<i class=\"ias-icon ias-icon-start_thick\"></i>",
  "<i class=\"ias-icon ias-icon-status_error_thick\"></i>": "<i class=\"ias-icon ias-icon-status_error_thick\"></i>",
  "<i class=\"ias-icon ias-icon-status_info_thick\"></i>": "<i class=\"ias-icon ias-icon-status_info_thick\"></i>",
  "<i class=\"ias-icon ias-icon-status_ok_thick\"></i>": "<i class=\"ias-icon ias-icon-status_ok_thick\"></i>",
  "<i class=\"ias-icon ias-icon-stop_thick\"></i>": "<i class=\"ias-icon ias-icon-stop_thick\"></i>",
  "<i class=\"icon icon-pencil\"></i>": "<i class=\"icon icon-pencil\"></i>",
  "<i class=\"icon icon-plus\"></i>": "<i class=\"icon icon-plus\"></i>",
  "<i class=\"icon icon-trash\"></i>": "<i class=\"icon icon-trash\"></i>",
  "<ng-template uxTabHeading>\r\n            <button class=\"btn btn-icon\" (click)=\"addNewHealthState()\"><i\r\n                class=\"ias-icon ias-icon-new_thick\"></i></button>\r\n          </ng-template>": "<ng-template uxTabHeading>\r\n            <button class=\"btn btn-icon\" (click)=\"addNewHealthState()\"><i\r\n                class=\"ias-icon ias-icon-new_thick\"></i></button>\r\n          </ng-template>",
  "<ng-template uxTabHeading>\r\n            <button class=\"btn btn-icon\" (click)=\"editHealthStates()\"><i\r\n                class=\"ias-icon ias-icon-edit_thick\"></i></button>\r\n          </ng-template>": "<ng-template uxTabHeading>\r\n            <button class=\"btn btn-icon\" (click)=\"editHealthStates()\"><i\r\n                class=\"ias-icon ias-icon-edit_thick\"></i></button>\r\n          </ng-template>",
  "<ng-template uxTabHeading>\r\n            <span class=\"health-status-icon\"><i [class]=\"getIcon(healthState.name)\"></i></span>\r\n            <span [value]>{{ getHealthStateDisplayName(healthState) }} </span>\r\n            <button *ngIf=\"isCustom(healthState)\" (click)=\"onRemoveCustomState(i)\" class=\"btn btn-icon\">\r\n              <i class=\"ias-icon ias-icon-close_thick\"></i>\r\n            </button>\r\n          </ng-template>": "<ng-template uxTabHeading>\r\n            <span class=\"health-status-icon\"><i [class]=\"getIcon(healthState.name)\"></i></span>\r\n            <span [value]>{{ getHealthStateDisplayName(healthState) }} </span>\r\n            <button *ngIf=\"isCustom(healthState)\" (click)=\"onRemoveCustomState(i)\" class=\"btn btn-icon\">\r\n              <i class=\"ias-icon ias-icon-close_thick\"></i>\r\n            </button>\r\n          </ng-template>",
  "<span translate class=\"ng-scope\">{{columnHeader}}</span>": "<span translate class=\"ng-scope\">{{columnHeader}}</span>",
  "<span>Run on Schedules</span>\r\n            <input type=\"checkbox\" name=\"localLockTimeout\" class=\"form-control ng-untouched ng-valid ng-dirty\"\r\n                [(ngModel)]=\"isRunOnScheduleEnabled\" [disabled]=\"disableEdit\" id=\"setScheduleToggle\"\r\n                (change)=\"setScheduleToggle()\"><i tabindex=\"0\"></i>": "<span>Run on Schedules</span>\r\n            <input type=\"checkbox\" name=\"localLockTimeout\" class=\"form-control ng-untouched ng-valid ng-dirty\"\r\n                [(ngModel)]=\"isRunOnScheduleEnabled\" [disabled]=\"disableEdit\" id=\"setScheduleToggle\"\r\n                (change)=\"setScheduleToggle()\"><i tabindex=\"0\"></i>",
  "A challenge set must contain at least one question": "A challenge set must contain at least one question",
  "A duplicate question was entered.": "A duplicate question was entered.",
  "A required value is missing!  You must supply a value before saving the Health Configuration.": "A required value is missing!  You must supply a value before saving the Health Configuration.",
  "ADD ATTRIBUTE TO RESOURCE: {{ this.selectedTreeObject['@class-name'] }}": "ADD ATTRIBUTE TO RESOURCE: {{ this.selectedTreeObject['@class-name'] }}",
  "AND": "AND",
  "Aborted": "Aborted",
  "Aborting and Disabling it": "Aborting and Disabling it",
  "About": "About",
  "Accept password only if it complies with user's Password Policy": "Accept password only if it complies with user's Password Policy",
  "Action": "Action",
  "Action menu": "Action menu",
  "Actions": "Actions",
  "Actions are evaluated by the Driver Health Job. Actions are executed when the conditions evaluate as true and they have either not been previously evaluated or most recently evaluated as false.": "Actions are evaluated by the Driver Health Job. Actions are executed when the conditions evaluate as true and they have either not been previously evaluated or most recently evaluated as false.",
  "Active Managed\r\n                                    Objects:": "Active Managed\r\n                                    Objects:",
  "Add": "Add",
  "Add Argument": "Add Argument",
  "Add Attribute": "Add Attribute",
  "Add Column": "Add Column",
  "Add Group": "Add Group",
  "Add Item": "Add Item",
  "Add Named Password": "Add Named Password",
  "Add New Action": "Add New Action",
  "Add New Association": "Add New Association",
  "Add New Attribute Mapping": "Add New Attribute Mapping",
  "Add New Condition": "Add New Condition",
  "Add New Condition Group": "Add New Condition Group",
  "Add Object": "Add Object",
  "Add Question": "Add Question",
  "Add Replacement Tag": "Add Replacement Tag",
  "Add Resource": "Add Resource",
  "Add Resource / Add Attribute to existing resource filter.": "Add Resource / Add Attribute to existing resource filter.",
  "Add Role": "Add Role",
  "Add Role Capability": "Add Role Capability",
  "Add Row": "Add Row",
  "Add User": "Add User",
  "Add identities to list": "Add identities to list",
  "Add item": "Add item",
  "Add new custom state": "Add new custom state",
  "Add new workflow argument": "Add new workflow argument",
  "Add:": "Add:",
  "Adds:": "Adds:",
  "Advanced": "Advanced",
  "Advanced Password Rules": "Advanced Password Rules",
  "Advanced Search": "Advanced Search",
  "Alert": "Alert",
  "All": "All",
  "All Dirxml Script Tracing Off": "All Dirxml Script Tracing Off",
  "All Dirxml Script Tracing On": "All Dirxml Script Tracing On",
  "All Email Templates": "All Email Templates",
  "All attributes deleted successfully": "All attributes deleted successfully",
  "All policies used in Publisher Channel": "All policies used in Publisher Channel",
  "All policies used in Subscriber Channel": "All policies used in Subscriber Channel",
  "All schemas deleted successfully": "All schemas deleted successfully",
  "Allow admin to retrieve passwords": "Allow admin to retrieve passwords",
  "Allow non-US ASCII characters": "Allow non-US ASCII characters",
  "Allow non-alphabetic characters in the password": "Allow non-alphabetic characters in the password",
  "Allow non-alphanumeric characters in the password": "Allow non-alphanumeric characters in the password",
  "Allow numeric characters in password": "Allow numeric characters in password",
  "Allow the following to retrieve passwords": "Allow the following to retrieve passwords",
  "Allow the password to be case sensitive": "Allow the password to be case sensitive",
  "Allow user to initiate password change": "Allow user to initiate password change",
  "Allow user to retrieve password": "Allow user to retrieve password",
  "Always accept password; ignore Password Policies": "Always accept password; ignore Password Policies",
  "Always execute actions when conditions are true": "Always execute actions when conditions are true",
  "Application": "Application",
  "Application Accepts Passwords": "Application Accepts Passwords",
  "Application accepts passwords (Subscriber Channel)": "Application accepts passwords (Subscriber Channel)",
  "Apply Trace Setting to:": "Apply Trace Setting to:",
  "April": "April",
  "Are you sure of deleting ": "Are you sure of deleting ",
  "Are you sure that you want to delete the health configuration?": "Are you sure that you want to delete the health configuration?",
  "Are you sure that you want to delete the selected workflow argument?": "Are you sure that you want to delete the selected workflow argument?",
  "Are you sure you want to remove selected policies?": "Are you sure you want to remove selected policies?",
  "Are you sure you want to reset the values?": "Are you sure you want to reset the values?",
  "Assignees": "Assignees",
  "Assignment": "Assignment",
  "Assignments": "Assignments",
  "Association Object ID": "Association Object ID",
  "Association Statistics": "Association Statistics",
  "Association added successfully.": "Association added successfully.",
  "Association removed successfully.": "Association removed successfully.",
  "Associations summary...": "Associations summary...",
  "Attribute Created successfully": "Attribute Created successfully",
  "Attributes": "Attributes",
  "Audit": "Audit",
  "August": "August",
  "Authenticate to the server by using credentials": "Authenticate to the server by using credentials",
  "Authentication": "Authentication",
  "Authentication Context": "Authentication Context",
  "Authentication ID": "Authentication ID",
  "Authentication Password": "Authentication Password",
  "Authorized": "Authorized",
  "Auto start": "Auto start",
  "Available History": "Available History",
  "BCC:": "BCC:",
  "Black": "Black",
  "Blue": "Blue",
  "Bright Blue": "Bright Blue",
  "Bright Brown": "Bright Brown",
  "Bright Cyan": "Bright Cyan",
  "Bright Green": "Bright Green",
  "Bright Purple": "Bright Purple",
  "Bright Red": "Bright Red",
  "CACHE SUMMARY": "CACHE SUMMARY",
  "CC:": "CC:",
  "CONFIRM": "CONFIRM",
  "CPU": "CPU",
  "Cache Summary": "Cache Summary",
  "Cache filename:": "Cache filename:",
  "Cache filesize:": "Cache filesize:",
  "Cancel": "Cancel",
  "Case Insensitive": "Case Insensitive",
  "Case Sensitive": "Case Sensitive",
  "Challenge Question": "Challenge Question",
  "Challenge Set": "Challenge Set",
  "Challenge Set DN:\r\n                                        <select class=\"chalSetWidth\" id=\"csdn\"\r\n                                            [(ngModel)]=\"forgottenPasswordObject.challengeSetDN\"\r\n                                            [disabled]=\"checkEnableForgottenPassword() || !requireCS\">\r\n                                            <option *ngFor=\"let chalSet of challengeSets\" id=\"chalSet\">{{ chalSet }}</option>\r\n                                        </select>\r\n                                        <button class=\"btn btn-icon\" role=\"button\" id=\"newChalSet\"\r\n                                            [disabled]=\"checkEnableForgottenPassword() || !requireCS\"\r\n                                                title=\"{{'Create New Challenge Set'|translate}}\" (click)=\"openNewChallengeSet()\" translate>\r\n                                            <i class=\"icon icon-plus\"></i>\r\n                                        </button>\r\n                                        <button class=\"btn btn-icon\" role=\"button\" id=\"viewChalSet\"\r\n                                            [disabled]=\"checkEnableForgottenPassword() || !requireCS || forgottenPasswordObject.challengeSetDN.length === 0\"\r\n                                            title=\"{{'Edit/View Challenge Set'|translate}}\" (click)=\"openModifyChallengeSet()\" translate>\r\n                                            <i class=\"icon icon-pencil\"></i>\r\n                                        </button>\r\n                                        <button class=\"btn btn-icon\" role=\"button\" id=\"delChalSet\"\r\n                                            [disabled]=\"checkEnableForgottenPassword() || !requireCS || forgottenPasswordObject.challengeSetDN.length === 0\"\r\n                                            title=\"{{'Remove Challenge Set'|translate}}\" (click)=\"removeChallengeSet()\" translate>\r\n                                            <i class=\"icon icon-trash\"></i>\r\n                                        </button>": "Challenge Set DN:\r\n                                        <select class=\"chalSetWidth\" id=\"csdn\"\r\n                                            [(ngModel)]=\"forgottenPasswordObject.challengeSetDN\"\r\n                                            [disabled]=\"checkEnableForgottenPassword() || !requireCS\">\r\n                                            <option *ngFor=\"let chalSet of challengeSets\" id=\"chalSet\">{{ chalSet }}</option>\r\n                                        </select>\r\n                                        <button class=\"btn btn-icon\" role=\"button\" id=\"newChalSet\"\r\n                                            [disabled]=\"checkEnableForgottenPassword() || !requireCS\"\r\n                                                title=\"{{'Create New Challenge Set'|translate}}\" (click)=\"openNewChallengeSet()\" translate>\r\n                                            <i class=\"icon icon-plus\"></i>\r\n                                        </button>\r\n                                        <button class=\"btn btn-icon\" role=\"button\" id=\"viewChalSet\"\r\n                                            [disabled]=\"checkEnableForgottenPassword() || !requireCS || forgottenPasswordObject.challengeSetDN.length === 0\"\r\n                                            title=\"{{'Edit/View Challenge Set'|translate}}\" (click)=\"openModifyChallengeSet()\" translate>\r\n                                            <i class=\"icon icon-pencil\"></i>\r\n                                        </button>\r\n                                        <button class=\"btn btn-icon\" role=\"button\" id=\"delChalSet\"\r\n                                            [disabled]=\"checkEnableForgottenPassword() || !requireCS || forgottenPasswordObject.challengeSetDN.length === 0\"\r\n                                            title=\"{{'Remove Challenge Set'|translate}}\" (click)=\"removeChallengeSet()\" translate>\r\n                                            <i class=\"icon icon-trash\"></i>\r\n                                        </button>",
  "Challenge Sets": "Challenge Sets",
  "Challenge set name cannot exceed 64 characters": "Challenge set name cannot exceed 64 characters",
  "Change Password": "Change Password",
  "Changes made will be lost. Do you want to continue?": "Changes made will be lost. Do you want to continue?",
  "Changes saved successfully": "Changes saved successfully",
  "Choose an action:": "Choose an action:",
  "Clear Driver Cache": "Clear Driver Cache",
  "Clear Filter": "Clear Filter",
  "Clear all Cached Events": "Clear all Cached Events",
  "Click on '+' button to add identities.": "Click on '+' button to add identities.",
  "Click the Add Column icon. Change the value for the column, then select whether the value is case sensitive,\r\n        case insensitive, or\r\n        numeric. Click the Add Row icon. Specify a value for the row. Click save.": "Click the Add Column icon. Change the value for the column, then select whether the value is case sensitive,\r\n        case insensitive, or\r\n        numeric. Click the Add Row icon. Specify a value for the row. Click save.",
  "Close": "Close",
  "Close Disabled Drivers": "Close Disabled Drivers",
  "Closed drivers:<span>{{closeCount}}</span>": "Closed drivers:<span>{{closeCount}}</span>",
  "Closing a 'Custom' state will remove its configuration entirely.  Are you sure that you want to close this 'Custom' state and discard its configuration?": "Closing a 'Custom' state will remove its configuration entirely.  Are you sure that you want to close this 'Custom' state and discard its configuration?",
  "Collaps": "Collaps",
  "Collapse": "Collapse",
  "Collapse All": "Collapse All",
  "Collapse All Transactions": "Collapse All Transactions",
  "Command Transformation Policies": "Command Transformation Policies",
  "Condition Group": "Condition Group",
  "Condition Groups": "Condition Groups",
  "Configuration": "Configuration",
  "Configuration Management": "Configuration Management",
  "Confirm Password": "Confirm Password",
  "Connected Systems": "Connected Systems",
  "Connection Parameters": "Connection Parameters",
  "Content type: ": "Content type: ",
  "Context": "Context",
  "Context:": "Context:",
  "Continuing their execution": "Continuing their execution",
  "Copy Filter From": "Copy Filter From",
  "Copyright 2023 Open Text.": "Copyright 2023 Open Text.",
  "Country Code": "Country Code",
  "Create": "Create",
  "Create Challenge Set": "Create Challenge Set",
  "Create Challenge Sets": "Create Challenge Sets",
  "Create Custom Reciprocal Attribute Mappings": "Create Custom Reciprocal Attribute Mappings",
  "Create Home Directory:": "Create Home Directory:",
  "Create New Challenge Set": "Create New Challenge Set",
  "Create New Health Configuration": "Create New Health Configuration",
  "Create Password Policy": "Create Password Policy",
  "Create Schema": "Create Schema",
  "Create a new Password Policy based on the default settings": "Create a new Password Policy based on the default settings",
  "Create a new job": "Create a new job",
  "Creation Policies": "Creation Policies",
  "Credential Provisioning Events": "Credential Provisioning Events",
  "Critical": "Critical",
  "Custom Reciprocal Attribute Mapping": "Custom Reciprocal Attribute Mapping",
  "Custom State": "Custom State",
  "Custom:": "Custom:",
  "Cyan": "Cyan",
  "DN": "DN",
  "DRIVER ACTIONS": "DRIVER ACTIONS",
  "Dark Grey": "Dark Grey",
  "Data Flow": "Data Flow",
  "Data Transformation and Synchronization": "Data Transformation and Synchronization",
  "Dataflow displays application attributes and the corresponding eDirectory attributes that the Provisioning\r\n            system uses to synchronize data.": "Dataflow displays application attributes and the corresponding eDirectory attributes that the Provisioning\r\n            system uses to synchronize data.",
  "Days": "Days",
  "Debug": "Debug",
  "December": "December",
  "Default": "Default",
  "Definition type": "Definition type",
  "Delete": "Delete",
  "Delete Action": "Delete Action",
  "Delete Assignee": "Delete Assignee",
  "Delete Attribute Mapping": "Delete Attribute Mapping",
  "Delete Challenge Sets": "Delete Challenge Sets",
  "Delete Condition": "Delete Condition",
  "Delete Condition Group": "Delete Condition Group",
  "Delete Confirm": "Delete Confirm",
  "Delete Confirm? Deleting operations from a driver's cache will happen immediately and cannot be undone or canceled. Are you sure you want to delete the selected operations?": "Delete Confirm? Deleting operations from a driver's cache will happen immediately and cannot be undone or canceled. Are you sure you want to delete the selected operations?",
  "Delete Driver": "Delete Driver",
  "Delete Fields": "Delete Fields",
  "Delete Health Configuration": "Delete Health Configuration",
  "Delete Items": "Delete Items",
  "Delete Named Passwords": "Delete Named Passwords",
  "Delete Password Policy": "Delete Password Policy",
  "Delete Policy": "Delete Policy",
  "Delete Question": "Delete Question",
  "Delete Row/s": "Delete Row/s",
  "Delete item": "Delete item",
  "Delete the selected job": "Delete the selected job",
  "Delete:": "Delete:",
  "Deletes:": "Deletes:",
  "Description": "Description",
  "Description:": "Description:",
  "Deselect All": "Deselect All",
  "DirXML error an exception occurred": "DirXML error an exception occurred",
  "DirXML warning the object is not associated in the target application": "DirXML warning the object is not associated in the target application",
  "Dirxml Script Rule Tracing Off": "Dirxml Script Rule Tracing Off",
  "Dirxml Script Rule Tracing On": "Dirxml Script Rule Tracing On",
  "Dirxml Script Tracing": "Dirxml Script Tracing",
  "Disable Association": "Disable Association",
  "Disable the selected job": "Disable the selected job",
  "Disabled": "Disabled",
  "Disabled:": "Disabled:",
  "Disallow non-alphanumeric character as first character": "Disallow non-alphanumeric character as first character",
  "Disallow non-alphanumeric character as last character": "Disallow non-alphanumeric character as last character",
  "Disallow numeric as first character": "Disallow numeric as first character",
  "Disallow numeric as last character": "Disallow numeric as last character",
  "Display Name": "Display Name",
  "Display a note about actions.": "Display a note about actions.",
  "Do not automatically synchronize the driver.": "Do not automatically synchronize the driver.",
  "Do not expire the user's password when the administrator sets the password": "Do not expire the user's password when the administrator sets the password",
  "Do you want to enable SSL ?": "Do you want to enable SSL ?",
  "Driver Cache Inspector": "Driver Cache Inspector",
  "Driver Configuration - XML Editor": "Driver Configuration - XML Editor",
  "Driver Health Configuration": "Driver Health Configuration",
  "Driver Health Configuration was removed successfully": "Driver Health Configuration was removed successfully",
  "Driver Import Successful": "Driver Import Successful",
  "Driver Inspector": "Driver Inspector",
  "Driver Management": "Driver Management",
  "Driver Manifest": "Driver Manifest",
  "Driver Parameters": "Driver Parameters",
  "Driver Restart Failed": "Driver Restart Failed",
  "Driver Shutdown": "Driver Shutdown",
  "Driver Startup": "Driver Startup",
  "Driver State": "Driver State",
  "Driver Status:": "Driver Status:",
  "Driver Trace Level:": "Driver Trace Level:",
  "Driver cache is empty": "Driver cache is empty",
  "Driver disabled, cache cannot be read.": "Driver disabled, cache cannot be read.",
  "Driver in Cache Overflow": "Driver in Cache Overflow",
  "Driver is not stopped, cache cannot be read.": "Driver is not stopped, cache cannot be read.",
  "Driver not running": "Driver not running",
  "DriverId": "DriverId",
  "Drivers": "Drivers",
  "ECMA Script": "ECMA Script",
  "ECMA Script Policy": "ECMA Script Policy",
  "ECMAScript Function Policy Set": "ECMAScript Function Policy Set",
  "ECMAScript viewer:": "ECMAScript viewer:",
  "EDIT: ": "EDIT: ",
  "EDIT: Filter": "EDIT: Filter",
  "Ecma Scripts": "Ecma Scripts",
  "Edit Custom State Descriptions": "Edit Custom State Descriptions",
  "Edit Driver Health Configuration XML": "Edit Driver Health Configuration XML",
  "Edit Email Notification Template": "Edit Email Notification Template",
  "Edit Named Password": "Edit Named Password",
  "Edit Resource": "Edit Resource",
  "Edit XML": "Edit XML",
  "Edit Xml": "Edit Xml",
  "Edit custom states": "Edit custom states",
  "Edit/View Challenge Set": "Edit/View Challenge Set",
  "Email Server Configuration": "Email Server Configuration",
  "Email Server Configuration saved successfully.": "Email Server Configuration saved successfully.",
  "Email Templates": "Email Templates",
  "Email server password:": "Email server password:",
  "Email template:": "Email template:",
  "Emergency": "Emergency",
  "Enable ECMAScript editing": "Enable ECMAScript editing",
  "Enable Forgotten Password": "Enable Forgotten Password",
  "Enable Universal Password": "Enable Universal Password",
  "Enable XML editing": "Enable XML editing",
  "Enable the Advanced Password Rules": "Enable the Advanced Password Rules",
  "Enable the above option for the driver to read from Driver Set": "Enable the above option for the driver to read from Driver Set",
  "Enable the above option for the driver to read from Ilm Configurations": "Enable the above option for the driver to read from Ilm Configurations",
  "Enable the selected job": "Enable the selected job",
  "Enabled": "Enabled",
  "Engine Control Values": "Engine Control Values",
  "Engine Control Values are a means through which certain default behaviors of the Metadirectory engine can be\r\n    changed.": "Engine Control Values are a means through which certain default behaviors of the Metadirectory engine can be\r\n    changed.",
  "English": "English",
  "Enter Authentication Context": "Enter Authentication Context",
  "Enter Authentication ID": "Enter Authentication ID",
  "Enter Authentication Password": "Enter Authentication Password",
  "Enter Description": "Enter Description",
  "Enter Dn": "Enter Dn",
  "Enter File name and location": "Enter File name and location",
  "Enter Mapping Table Name": "Enter Mapping Table Name",
  "Enter Password": "Enter Password",
  "Enter a starting date/time in the format, dd/mm/yyyy hh:mm AM/PM.": "Enter a starting date/time in the format, dd/mm/yyyy hh:mm AM/PM.",
  "Enter dn": "Enter dn",
  "Enter only positive numbers": "Enter only positive numbers",
  "Enter the Template Name": "Enter the Template Name",
  "Enter the subject here.": "Enter the subject here.",
  "Enter the template subject": "Enter the template subject",
  "Enter the token Name": "Enter the token Name",
  "Enter the token description": "Enter the token description",
  "Error": "Error",
  "Error Importing ECMA Script.": "Error Importing ECMA Script.",
  "Event Configurations": "Event Configurations",
  "Event Transformation Policies": "Event Transformation Policies",
  "Event data fields are provided by named string elements. The NetIQ Audit Event structure contains string fields\r\n          (target, subTarget, text1, text2, text3), integer fields (target\\\\-type, data\\\\-type, value, value3) and one\r\n          generic data field (data). The string fields are limited to 256 bytes while the data field may contain up to 3KB\r\n          of information.": "Event data fields are provided by named string elements. The NetIQ Audit Event structure contains string fields\r\n          (target, subTarget, text1, text2, text3), integer fields (target\\\\-type, data\\\\-type, value, value3) and one\r\n          generic data field (data). The string fields are limited to 256 bytes while the data field may contain up to 3KB\r\n          of information.",
  "Examine all objects": "Examine all objects",
  "Exception occurred while encoding the xml": "Exception occurred while encoding the xml",
  "Exclude passwords that match attribute values:": "Exclude passwords that match attribute values:",
  "Exclude the following passwords:": "Exclude the following passwords:",
  "Execute ECMAScript": "Execute ECMAScript",
  "Expand All": "Expand All",
  "Expand All Transactionsl": "Expand All Transactionsl",
  "Export": "Export",
  "Export Driver": "Export Driver",
  "Export Driverset": "Export Driverset",
  "Export Statistics": "Export Statistics",
  "Exporting....": "Exporting....",
  "Failed to add Email Server Configuration": "Failed to add Email Server Configuration",
  "Failed to add association": "Failed to add association",
  "Failed to remove association": "Failed to remove association",
  "Failed to save Reciprocal attribute": "Failed to save Reciprocal attribute",
  "February": "February",
  "Filter": "Filter",
  "Filter for 'Disabled' associations": "Filter for 'Disabled' associations",
  "Filter for 'Manual' associations": "Filter for 'Manual' associations",
  "Filter for 'Migrate' associations": "Filter for 'Migrate' associations",
  "Filter for 'Pending' associations": "Filter for 'Pending' associations",
  "Filter for 'Processed' associations": "Filter for 'Processed' associations",
  "Filter for 'Undefined' associations": "Filter for 'Undefined' associations",
  "Final Result": "Final Result",
  "Finish": "Finish",
  "For example: If the driver evaluated as ''Yellow'' but now evaluates as ''Green'', these actions will be executed.": "For example: If the driver evaluated as ''Yellow'' but now evaluates as ''Green'', these actions will be executed.",
  "Force user to configure Challenge Questions and/or Hint upon authentication": "Force user to configure Challenge Questions and/or Hint upon authentication",
  "Forgotten Password": "Forgotten Password",
  "Forgotten password": "Forgotten password",
  "Friday": "Friday",
  "From:": "From:",
  "Full access": "Full access",
  "General": "General",
  "Generate Event": "Generate Event",
  "Global Config Values": "Global Config Values",
  "Global Configs": "Global Configs",
  "Global Configuration Values": "Global Configuration Values",
  "Green": "Green",
  "Grey": "Grey",
  "Group Memberships": "Group Memberships",
  "Groups": "Groups",
  "Guid": "Guid",
  "Health Configuration": "Health Configuration",
  "Healthy": "Healthy",
  "Help": "Help",
  "History list size:": "History list size:",
  "Host Details": "Host Details",
  "Host GUID": "Host GUID",
  "Host IP": "Host IP",
  "Host Name": "Host Name",
  "Host Name:": "Host Name:",
  "Hostname": "Hostname",
  "Hours": "Hours",
  "ID": "ID",
  "ID Vault": "ID Vault",
  "Id": "Id",
  "Identification": "Identification",
  "Identities": "Identities",
  "Identity Console Accepts Password": "Identity Console Accepts Password",
  "Identity Lifecycle Manager": "Identity Lifecycle Manager",
  "Identity Lifecycle Manager [[version]] was built on [[date]] from revision [[revision]]": "Identity Lifecycle Manager {{version}} was built on {{date}} from revision {{revision}}",
  "Identity Lifecyle Manager accepts passwords (Publisher Channel)": "Identity Lifecyle Manager accepts passwords (Publisher Channel)",
  "Identity Vault": "Identity Vault",
  "If no option is selected, no action will be taken for this result.": "If no option is selected, no action will be taken for this result.",
  "If password does not comply, enforce Password Policy on the connected system by resetting user's password to the Distribution Password": "If password does not comply, enforce Password Policy on the connected system by resetting user's password to the Distribution Password",
  "Ignore": "Ignore",
  "Import": "Import",
  "Import Ecma Script": "Import Ecma Script",
  "Imported Sucessfully.": "Imported Sucessfully.",
  "Inactive Managed\r\n                                    Objects:": "Inactive Managed\r\n                                    Objects:",
  "Info": "Info",
  "Input": "Input",
  "Input Policy": "Input Policy",
  "Input Transformation Policies": "Input Transformation Policies",
  "Insert Policy": "Insert Policy",
  "Inspector": "Inspector",
  "Installation Time ": "Installation Time ",
  "Integration Driver Object": "Integration Driver Object",
  "Intermediate Result": "Intermediate Result",
  "Invalid cron string": "Invalid cron string",
  "Invalid crontab syntax": "Invalid crontab syntax",
  "JS Editor": "JS Editor",
  "January": "January",
  "Java Environment Parameters": "Java Environment Parameters",
  "Job name": "Job name",
  "Jobs": "Jobs",
  "July": "July",
  "June": "June",
  "KMO": "KMO",
  "Language": "Language",
  "Language Code": "Language Code",
  "Last Modified": "Last Modified",
  "Last computed count time :": "Last computed count time :",
  "Letting it Continue Running": "Letting it Continue Running",
  "Libraries": "Libraries",
  "Limit the number of grace logins allowed:": "Limit the number of grace logins allowed:",
  "Log & Trace Configuration": "Log & Trace Configuration",
  "Log Errors": "Log Errors",
  "Log Errors and warnings": "Log Errors and warnings",
  "Log Level": "Log Level",
  "Log specific events": "Log specific events",
  "Logging off": "Logging off",
  "Login": "Login",
  "MB": "MB",
  "MIGRATION_FROM_HEADER": "Migrate Identities from ILM to {{driverName}}",
  "Mandatory Attributes:": "Mandatory Attributes:",
  "Manual": "Manual",
  "Manual:": "Manual:",
  "Mapping Table": "Mapping Table",
  "Mapping Table - XML Editor": "Mapping Table - XML Editor",
  "Mapping Tables": "Mapping Tables",
  "March": "March",
  "Matching Policies": "Matching Policies",
  "Max": "Max",
  "Maximum Length:": "Maximum Length:",
  "Maximum number of characters in password:": "Maximum number of characters in password:",
  "Maximum number of complexity policy violations in password": "Maximum number of complexity policy violations in password",
  "Maximum number of lower case characters allowed in password:": "Maximum number of lower case characters allowed in password:",
  "Maximum number of non-alphabetic characters:": "Maximum number of non-alphabetic characters:",
  "Maximum number of non-alphanumeric characters:": "Maximum number of non-alphanumeric characters:",
  "Maximum number of numerals in password:": "Maximum number of numerals in password:",
  "Maximum number of times a specific character can be repeated sequentially:": "Maximum number of times a specific character can be repeated sequentially:",
  "Maximum number of times a specific character can be used:": "Maximum number of times a specific character can be used:",
  "Maximum number of upper case characters allowed in password:": "Maximum number of upper case characters allowed in password:",
  "May": "May",
  "Members": "Members",
  "Merge Authority:": "Merge Authority:",
  "Message Body": "Message Body",
  "Metadirectory Engine Events": "Metadirectory Engine Events",
  "Migrate From IDVault": "Migrate From IDVault",
  "Migrate Identities Into ILM  from": "Migrate Identities Into ILM  from",
  "Migrate into IDVault": "Migrate into IDVault",
  "Migrate:": "Migrate:",
  "Milliseconds": "Milliseconds",
  "Min": "Min",
  "Minimum Length:": "Minimum Length:",
  "Minimum number of characters in password:": "Minimum number of characters in password:",
  "Minimum number of lower case characters required in password:": "Minimum number of lower case characters required in password:",
  "Minimum number of non-alphabetic characters:": "Minimum number of non-alphabetic characters:",
  "Minimum number of non-alphanumeric characters:": "Minimum number of non-alphanumeric characters:",
  "Minimum number of numerals in password:": "Minimum number of numerals in password:",
  "Minimum number of unique characters:": "Minimum number of unique characters:",
  "Minimum number of upper case characters required in password:": "Minimum number of upper case characters required in password:",
  "Minute: 0-59; Hour: 0-23; Day of month: 1-31; Month: 1-12; Day of week:\r\n                    0-6, 0=Sunday;\r\n                    *=all. Use a comma to separate integers and ranges, and a space to separate each field.": "Minute: 0-59; Hour: 0-23; Day of month: 1-31; Month: 1-12; Day of week:\r\n                    0-6, 0=Sunday;\r\n                    *=all. Use a comma to separate integers and ranges, and a space to separate each field.",
  "Minutes": "Minutes",
  "Modifies:": "Modifies:",
  "Modify Argument": "Modify Argument",
  "Modify Challenge Set": "Modify Challenge Set",
  "Modify Object": "Modify Object",
  "Modify item": "Modify item",
  "Modify selected workflow argument": "Modify selected workflow argument",
  "Modify:": "Modify:",
  "Monday": "Monday",
  "Move Down Attribute Mapping": "Move Down Attribute Mapping",
  "Move Up Attribute Mapping": "Move Up Attribute Mapping",
  "Move down": "Move down",
  "Move down the Action": "Move down the Action",
  "Move down the Condition": "Move down the Condition",
  "Move down the Condition Group": "Move down the Condition Group",
  "Move policy down": "Move policy down",
  "Move policy up": "Move policy up",
  "Move up": "Move up",
  "Move up the Action": "Move up the Action",
  "Move up the Condition": "Move up the Condition",
  "Move up the Condition Group": "Move up the Condition Group",
  "Moves:": "Moves:",
  "N/A": "N/A",
  "NDS error can not communicate with server": "NDS error can not communicate with server",
  "NDS error: No Distribution Password": "NDS error: No Distribution Password",
  "Name": "Name",
  "Name:": "Name:",
  "Named Passwords": "Named Passwords",
  "Named Passwords lets you securely store\r\n        multiple passwords for a driver. Instead of including a password in clear text in a driver policy, you can\r\n        configure the policy to request a Named Password.": "Named Passwords lets you securely store\r\n        multiple passwords for a driver. Instead of including a password in clear text in a driver policy, you can\r\n        configure the policy to request a Named Password.",
  "New Column": "New Column",
  "Newest": "Newest",
  "Newest transaction:": "Newest transaction:",
  "Next\r\n        <i class=\"ias-icon ias-icon-next_right_thin\"></i>": "Next\r\n        <i class=\"ias-icon ias-icon-next_right_thin\"></i>",
  "Next scheduled run": "Next scheduled run",
  "No": "No",
  "No Action": "No Action",
  "No Actions found. Click on '+' icon to add one.": "No Actions found. Click on '+' icon to add one.",
  "No Association found": "No Association found",
  "No Condition Groups found. Click on '+' icon to add one.": "No Condition Groups found. Click on '+' icon to add one.",
  "No Items": "No Items",
  "No Match found": "No Match found",
  "No Name": "No Name",
  "No Policy found": "No Policy found",
  "No Results Found": "No Results Found",
  "No Results found": "No Results found",
  "No Templates Found": "No Templates Found",
  "No drivers found": "No drivers found",
  "No health configuration found for the selectced driver. Click on the '+' icon above to create new health\r\n              configuration": "No health configuration found for the selectced driver. Click on the '+' icon above to create new health\r\n              configuration",
  "No mapping table associated": "No mapping table associated",
  "No questions added.": "No questions added.",
  "No random questions added.": "No random questions added.",
  "No result found": "No result found",
  "No scripts found": "No scripts found",
  "No server associated": "No server associated",
  "Non-alphabetic Characters": "Non-alphabetic Characters",
  "Non-alphanumeric Characters": "Non-alphanumeric Characters",
  "None": "None",
  "Not Available": "Not Available",
  "Note that a driver's cache can only be read from a server if the driver is in a 'Stopped' state on that\r\n        server.": "Note that a driver's cache can only be read from a server if the driver is in a 'Stopped' state on that\r\n        server.",
  "Notice": "Notice",
  "Notify": "Notify",
  "Notify the user of password synchronization failure via e-mail": "Notify the user of password synchronization failure via e-mail",
  "November": "November",
  "Number of characters different from current password and passwords from history:": "Number of characters different from current password and passwords from history:",
  "Number of days before password can be changed:": "Number of days before password can be changed:",
  "Number of days before password expires:": "Number of days before password expires:",
  "Number of passwords in history to be considered for character exclusion:": "Number of passwords in history to be considered for character exclusion:",
  "Number of random question to ask user when password is forgotten.\r\n            <select [(ngModel)]=\"nsimNumberRandomQuestions\" id=\"forgetQuestion\" (change)=\"isModified=true\">\r\n            <option *ngFor=\"let i of totalRandomQuestion\" [ngValue]=\"i\">{{i}}</option>\r\n            </select>": "Number of random question to ask user when password is forgotten.\r\n            <select [(ngModel)]=\"nsimNumberRandomQuestions\" id=\"forgetQuestion\" (change)=\"isModified=true\">\r\n            <option *ngFor=\"let i of totalRandomQuestion\" [ngValue]=\"i\">{{i}}</option>\r\n            </select>",
  "Number of random question to ask user when password is forgotten.\r\n          <select [(ngModel)]=\"nsimNumberRandomQuestions\" id=\"forgetQuestion\" (change)=\"isModified=true\">\r\n            <option *ngFor=\"let i of totalRandomQuestion\" [ngValue]=\"i\">{{i}}</option>\r\n          </select>": "Number of random question to ask user when password is forgotten.\r\n          <select [(ngModel)]=\"nsimNumberRandomQuestions\" id=\"forgetQuestion\" (change)=\"isModified=true\">\r\n            <option *ngFor=\"let i of totalRandomQuestion\" [ngValue]=\"i\">{{i}}</option>\r\n          </select>",
  "Numeric": "Numeric",
  "Numeric Characters": "Numeric Characters",
  "OK": "OK",
  "OR": "OR",
  "Object": "Object",
  "Object Browser": "Object Browser",
  "Object DN": "Object DN",
  "Object ID": "Object ID",
  "Object Inspector": "Object Inspector",
  "Object type": "Object type",
  "Object:": "Object:",
  "Objects": "Objects",
  "October": "October",
  "Offline": "Offline",
  "Ok": "Ok",
  "Oldest": "Oldest",
  "Oldest transaction:": "Oldest transaction:",
  "On Error": "On Error",
  "Online": "Online",
  "Only update the last log time": "Only update the last log time",
  "Operating System Name": "Operating System Name",
  "Operating System Version": "Operating System Version",
  "Operation Events": "Operation Events",
  "Optimize modifications to Identity Vault:": "Optimize modifications to Identity Vault:",
  "Other parameters": "Other parameters",
  "Others:": "Others:",
  "Out of Band Sync CacheInspector": "Out of Band Sync CacheInspector",
  "Output": "Output",
  "Output Policy": "Output Policy",
  "Output:Event": "Output:Event",
  "Password": "Password",
  "Password Change Message:": "Password Change Message:",
  "Password Exclusions": "Password Exclusions",
  "Password Length": "Password Length",
  "Password Length and Composition": "Password Length and Composition",
  "Password Lifetime": "Password Lifetime",
  "Password Policies": "Password Policies",
  "Password Policy name can not exceed 64 characters": "Password Policy name can not exceed 64 characters",
  "Password Policy was created successfully": "Password Policy was created successfully",
  "Password Policy was modified successfully": "Password Policy was modified successfully",
  "Password Prompt": "Password Prompt",
  "Password Status": "Password Status",
  "Password Synchronization": "Password Synchronization",
  "Password Syntax": "Password Syntax",
  "Password:": "Password:",
  "Passwords are NOT syncronized": "Passwords are NOT syncronized",
  "Passwords are syncronized": "Passwords are syncronized",
  "Passwords don't match!": "Passwords don't match!",
  "Pending:": "Pending:",
  "Perform Out of Band Sync(Subscriber):": "Perform Out of Band Sync(Subscriber):",
  "Permissions": "Permissions",
  "Placement Policies": "Placement Policies",
  "Please enter Integer value only.": "Please enter Integer value only.",
  "Please enter a question for this language.": "Please enter a question for this language.",
  "Please enter a value between 1000 and 1999 for Generate Event ID": "Please enter a value between 1000 and 1999 for Generate Event ID",
  "Please enter the two character language code": "Please enter the two character language code",
  "Please run the statistics job OR use Recompute option on current server": "Please run the statistics job OR use Recompute option on current server",
  "Please select a condition": "Please select a condition",
  "Please select an action": "Please select an action",
  "Policies": "Policies",
  "Policy Assignments": "Policy Assignments",
  "Policy Summary": "Policy Summary",
  "Policy sets using this policy": "Policy sets using this policy",
  "Port": "Port",
  "Postal Address": "Postal Address",
  "Previous\r\n        <i class=\"ias-icon ias-icon-prev_left_thin\"></i>": "Previous\r\n        <i class=\"ias-icon ias-icon-prev_left_thin\"></i>",
  "Processed:": "Processed:",
  "Product Edition": "Product Edition",
  "Product Name": "Product Name",
  "Product Version": "Product Version",
  "Publisher :": "Publisher :",
  "Publisher Command": "Publisher Command",
  "Publisher Command Policy": "Publisher Command Policy",
  "Publisher Create": "Publisher Create",
  "Publisher Creation Policy": "Publisher Creation Policy",
  "Publisher Event": "Publisher Event",
  "Publisher Event Policy": "Publisher Event Policy",
  "Publisher Matching": "Publisher Matching",
  "Publisher Matching Policy": "Publisher Matching Policy",
  "Publisher Placement": "Publisher Placement",
  "Publisher Placement Policy": "Publisher Placement Policy",
  "Purple": "Purple",
  "Question": "Question",
  "Questions": "Questions",
  "RAM": "RAM",
  "Random Questions": "Random Questions",
  "Read": "Read",
  "Read All": "Read All",
  "Reciprocal Attribute :": "Reciprocal Attribute :",
  "Reciprocal Attribute Mappings": "Reciprocal Attribute Mappings",
  "Reciprocal Attribute Mappings ": "Reciprocal Attribute Mappings ",
  "Reciprocal Schema :": "Reciprocal Schema :",
  "Reciprocal attributes saved successfully.": "Reciprocal attributes saved successfully.",
  "Recompute": "Recompute",
  "Recompute will run the statistics job and may take some time based on the number of associations.Are you sure you want to continue?": "Recompute will run the statistics job and may take some time based on the number of associations.Are you sure you want to continue?",
  "Red": "Red",
  "Reference": "Reference",
  "Refersh": "Refersh",
  "Refresh": "Refresh",
  "Refresh Templates": "Refresh Templates",
  "Rejecting the Current State": "Rejecting the Current State",
  "Remove": "Remove",
  "Remove Challenge Set": "Remove Challenge Set",
  "Remove selected workflow argument": "Remove selected workflow argument",
  "Remove the NDS password when setting password": "Remove the NDS password when setting password",
  "Renames:": "Renames:",
  "Repeating Characters": "Repeating Characters",
  "Replacement Tags": "Replacement Tags",
  "Reply to:": "Reply to:",
  "Request Resync:": "Request Resync:",
  "Require Challenge Set": "Require Challenge Set",
  "Require unique passwords": "Require unique passwords",
  "Required Questions": "Required Questions",
  "Reset": "Reset",
  "Resource / Attribute": "Resource / Attribute",
  "Resource Capabilities": "Resource Capabilities",
  "Resource List": "Resource List",
  "Resource Type": "Resource Type",
  "Resource type": "Resource type",
  "Resource/Attribute Filter": "Resource/Attribute Filter",
  "Restart Driver": "Restart Driver",
  "Resync Entry:": "Resync Entry:",
  "Roles": "Roles",
  "Running": "Running",
  "Running Drivers": "Running Drivers",
  "Saturday": "Saturday",
  "Save": "Save",
  "Save connection parameters": "Save connection parameters",
  "Save operation failed": "Save operation failed",
  "Saved Successfully": "Saved Successfully",
  "Saving selected job is failed": "Saving selected job is failed",
  "Saving the Current State": "Saving the Current State",
  "Schema Created successfully": "Schema Created successfully",
  "Schema Mapping": "Schema Mapping",
  "Schema Mapping Policies": "Schema Mapping Policies",
  "Schema Policy": "Schema Policy",
  "Schema deletion failed": "Schema deletion failed",
  "Schemas and Object Management": "Schemas and Object Management",
  "Scope Name": "Scope Name",
  "Script delete failed": "Script delete failed",
  "Script deleted successfully": "Script deleted successfully",
  "Scripts deleted successfully": "Scripts deleted successfully",
  "Search": "Search",
  "Search Filter\r\n      <i class=\"ux-icon ux-icon-information info-title \" title=\"group query\"></i>": "Search Filter\r\n      <i class=\"ux-icon ux-icon-information info-title \" title=\"group query\"></i>",
  "Search Provision Request DN": "Search Provision Request DN",
  "Search Resource": "Search Resource",
  "Search Results": "Search Results",
  "Search Template": "Search Template",
  "Search User": "Search User",
  "Search by name": "Search by name",
  "Search by resource or attribute name": "Search by resource or attribute name",
  "Search type": "Search type",
  "Seconds": "Seconds",
  "Security": "Security",
  "Select All": "Select All",
  "Select An Action": "Select An Action",
  "Select Attribute": "Select Attribute",
  "Select EcmaScripts": "Select EcmaScripts",
  "Select New Condition": "Select New Condition",
  "Select Object Class": "Select Object Class",
  "Select a resource to add to the filter": "Select a resource to add to the filter",
  "Select from the CBC agents list given": "Select from the CBC agents list given",
  "Select the attributes to add to the filter.": "Select the attributes to add to the filter.",
  "Select the object on which you want to run the Object Inspector.": "Select the object on which you want to run the Object Inspector.",
  "Select the token name": "Select the token name",
  "Select value": "Select value",
  "Selected Job(s) deleted Successfully": "Selected Job(s) deleted Successfully",
  "Selected Job(s) failed to delete": "Selected Job(s) failed to delete",
  "Selected Object(s) failed to delete": "Selected Object(s) failed to delete",
  "Selected Objects(s) Deleted Successfully": "Selected Objects(s) Deleted Successfully",
  "Selected identities will be migrated from ILM to the connected system.": "Selected identities will be migrated from ILM to the connected system.",
  "Selected job is saved successfully": "Selected job is saved successfully",
  "Selected job(s) Starting": "Selected job(s) Starting",
  "Selected job(s) Stopping": "Selected job(s) Stopping",
  "Selected operation completed successfully": "Selected operation completed successfully",
  "Selected operation failed": "Selected operation failed",
  "Send Email": "Send Email",
  "September": "September",
  "Set Template": "Set Template",
  "Show All": "Show All",
  "Show All associations": "Show All associations",
  "Show System Info": "Show System Info",
  "Shutdown": "Shutdown",
  "Shutdown Policy": "Shutdown Policy",
  "Signout": "Signout",
  "Software Details": "Software Details",
  "Some attributes failed to delete": "Some attributes failed to delete",
  "Some exception occurred": "Some exception occurred",
  "Some exception occurred while decoding the xml": "Some exception occurred while decoding the xml",
  "Some exception occurred while encoding the xml": "Some exception occurred while encoding the xml",
  "Source Attribute :": "Source Attribute :",
  "Source Schema :": "Source Schema :",
  "Specify the jobs scope criteria": "Specify the jobs scope criteria",
  "Start Driver": "Start Driver",
  "Start Workflow": "Start Workflow",
  "Start migration.": "Start migration.",
  "Start the selected job": "Start the selected job",
  "Starting": "Starting",
  "Starting Drivers": "Starting Drivers",
  "Startup": "Startup",
  "Startup Options": "Startup Options",
  "Startup Policy": "Startup Policy",
  "State": "State",
  "Statistics": "Statistics",
  "Status": "Status",
  "Status Events": "Status Events",
  "Stop Driver": "Stop Driver",
  "Stop the selected job": "Stop the selected job",
  "Stopped": "Stopped",
  "Stopped Drivers": "Stopped Drivers",
  "Stopping Drivers": "Stopping Drivers",
  "Stopping their execution": "Stopping their execution",
  "Subject": "Subject",
  "Subscriber :": "Subscriber :",
  "Subscriber Command": "Subscriber Command",
  "Subscriber Command Policy": "Subscriber Command Policy",
  "Subscriber Create": "Subscriber Create",
  "Subscriber Creation Policy": "Subscriber Creation Policy",
  "Subscriber Event": "Subscriber Event",
  "Subscriber Event Policy": "Subscriber Event Policy",
  "Subscriber Matching": "Subscriber Matching",
  "Subscriber Matching Policy": "Subscriber Matching Policy",
  "Subscriber Placement": "Subscriber Placement",
  "Subscriber Placement Policy": "Subscriber Placement Policy",
  "Success": "Success",
  "Sunday": "Sunday",
  "Sure Wanted to delete all rows ?": "Sure Wanted to delete all rows ?",
  "Sure Wanted to delete the row ?": "Sure Wanted to delete the row ?",
  "Sync": "Sync",
  "Synchronization": "Synchronization",
  "Synchronization status shows whether a recent password change has successfully occurred\r\n                                on a connected system.": "Synchronization status shows whether a recent password change has successfully occurred\r\n                                on a connected system.",
  "Synchronize": "Synchronize",
  "Synchronize Distribution Password when setting password": "Synchronize Distribution Password when setting password",
  "Synchronize NDS password when setting password": "Synchronize NDS password when setting password",
  "Synchronize Simple Password when setting password": "Synchronize Simple Password when setting password",
  "System Architecture": "System Architecture",
  "System Managed\r\n                                    Objects:": "System Managed\r\n                                    Objects:",
  "Template Name": "Template Name",
  "Template Subject": "Template Subject",
  "Template Values": "Template Values",
  "The ''Green'' indicator is shown for a healthy driver. The ''Green'' configuration is analyzed prior to the\r\n        ''Yellow'' configuration. Only if the ''Green'' configuration fails will the ''Yellow'' configuration be\r\n        analyzed.": "The ''Green'' indicator is shown for a healthy driver. The ''Green'' configuration is analyzed prior to the\r\n        ''Yellow'' configuration. Only if the ''Green'' configuration fails will the ''Yellow'' configuration be\r\n        analyzed.",
  "The action selected requires a Challenge Set. You must first change the action before disabling Challenge Sets.": "The action selected requires a Challenge Set. You must first change the action before disabling Challenge Sets.",
  "The crontab standard is used to schedule Identity Manger jobs. Use the \"Custom\" option to create complex,\r\n        patterned schedules.": "The crontab standard is used to schedule Identity Manger jobs. Use the \"Custom\" option to create complex,\r\n        patterned schedules.",
  "The following Driver Manifest information describes the features that are supported by this driver.": "The following Driver Manifest information describes the features that are supported by this driver.",
  "The following policies were found in this library:": "The following policies were found in this library:",
  "The following values will be used for attributes that are\r\n                added to the filter.": "The following values will be used for attributes that are\r\n                added to the filter.",
  "The job will run manually": "The job will run manually",
  "The maximum length must be greater than the minimum length.": "The maximum length must be greater than the minimum length.",
  "The number of arguments and the names used are dependent on the workflow to be started. The following names have special meaning and are available regardless of the workflow.": "The number of arguments and the names used are dependent on the workflow to be started. The following names have special meaning and are available regardless of the workflow.",
  "The objects that match the matching criteria will be migrated into the ILM.": "The objects that match the matching criteria will be migrated into the ILM.",
  "The question marked as the default cannot be deleted.  To delete this question, you must first select another as the default.": "The question marked as the default cannot be deleted.  To delete this question, you must first select another as the default.",
  "The synchronize operation will look for objects that have been modified since the date/time you enter.": "The synchronize operation will look for objects that have been modified since the date/time you enter.",
  "The value entered must be a number between 1 and 255.": "The value entered must be a number between 1 and 255.",
  "There are no attributes mapped. Click on the '+' icon above to\r\n                    create new attribute mappings": "There are no attributes mapped. Click on the '+' icon above to\r\n                    create new attribute mappings",
  "These are the system details": "These are the system details",
  "This policy is not being used by any drivers contained in the driver set\r\n              that contains this policy.": "This policy is not being used by any drivers contained in the driver set\r\n              that contains this policy.",
  "Thursday": "Thursday",
  "Time Out Value(Seconds):": "Time Out Value(Seconds):",
  "To:": "To:",
  "Token Description": "Token Description",
  "Token Name": "Token Name",
  "Total\r\n                                    Objects:": "Total\r\n                                    Objects:",
  "Total Size": "Total Size",
  "Total associations": "Total associations",
  "Trace": "Trace",
  "Trace File:": "Trace File:",
  "Trace Level:": "Trace Level:",
  "Trace Name:": "Trace Name:",
  "Trace file encoding:": "Trace file encoding:",
  "Trace file size limit:": "Trace file size limit:",
  "Trace messages will be prepended with the value entered for 'Trace name'.": "Trace messages will be prepended with the value entered for 'Trace name'.",
  "Traces": "Traces",
  "Track Template Member:": "Track Template Member:",
  "Transactions History": "Transactions History",
  "Transformation Events": "Transformation Events",
  "Tuesday": "Tuesday",
  "Turn off logging to Ilm Configurations, Subscriber and Publisher logs.\r\n                    <input type=\"checkbox\" id=\"logPubCheckbox\" name=\"localLockTimeout\" (input)=\"enableFlag()\"\r\n                        formcontrolname=\"localLockTimeout\" class=\"form-control ng-untouched ng-valid ng-dirty\"\r\n                        [ngClass]=\"{'disaledCursor':driverSetLogCheckbox}\" [disabled]=\"driverSetLogCheckbox && driver\"\r\n                        [(ngModel)]=\"pubSubCheckbox\" [checked]=\"pubSubCheckbox\">\r\n                    <i [ngClass]=\"{'disaledCursor':driverSetLogCheckbox}\" id=\"logDriverOff\" tabindex=\"0\"></i>": "Turn off logging to Ilm Configurations, Subscriber and Publisher logs.\r\n                    <input type=\"checkbox\" id=\"logPubCheckbox\" name=\"localLockTimeout\" (input)=\"enableFlag()\"\r\n                        formcontrolname=\"localLockTimeout\" class=\"form-control ng-untouched ng-valid ng-dirty\"\r\n                        [ngClass]=\"{'disaledCursor':driverSetLogCheckbox}\" [disabled]=\"driverSetLogCheckbox && driver\"\r\n                        [(ngModel)]=\"pubSubCheckbox\" [checked]=\"pubSubCheckbox\">\r\n                    <i [ngClass]=\"{'disaledCursor':driverSetLogCheckbox}\" id=\"logDriverOff\" tabindex=\"0\"></i>",
  "Turn off logging to Ilm Configurations, Subscriber and Publisher logs.\r\n                    <input type=\"checkbox\" name=\"localLockTimeout\" (input)=\"enableFlag()\" id=\"ilmConfigPubLogCheckbox\"\r\n                        formcontrolname=\"localLockTimeout\" class=\"form-control ng-untouched ng-valid ng-dirty\"\r\n                        [ngClass]=\"{'disaledCursor':driverSetLogCheckbox}\"\r\n                        [disabled]=\"driverSetLogCheckbox && ilmConfig\" [(ngModel)]=\"pubSubCheckbox\"\r\n                        [checked]=\"pubSubCheckbox\">\r\n                    <i [ngClass]=\"{'disaledCursor':driverSetLogCheckbox}\" tabindex=\"0\" id=\"logDriverOff\"></i>": "Turn off logging to Ilm Configurations, Subscriber and Publisher logs.\r\n                    <input type=\"checkbox\" name=\"localLockTimeout\" (input)=\"enableFlag()\" id=\"ilmConfigPubLogCheckbox\"\r\n                        formcontrolname=\"localLockTimeout\" class=\"form-control ng-untouched ng-valid ng-dirty\"\r\n                        [ngClass]=\"{'disaledCursor':driverSetLogCheckbox}\"\r\n                        [disabled]=\"driverSetLogCheckbox && ilmConfig\" [(ngModel)]=\"pubSubCheckbox\"\r\n                        [checked]=\"pubSubCheckbox\">\r\n                    <i [ngClass]=\"{'disaledCursor':driverSetLogCheckbox}\" tabindex=\"0\" id=\"logDriverOff\"></i>",
  "Type": "Type",
  "Unauthorized": "Unauthorized",
  "Unhealthy": "Unhealthy",
  "Universal Password": "Universal Password",
  "Universal Password Retrieval": "Universal Password Retrieval",
  "Unknown": "Unknown",
  "Unknown Drivers": "Unknown Drivers",
  "Unlimited": "Unlimited",
  "Unprocessed Size": "Unprocessed Size",
  "Unprocessed Transactions": "Unprocessed Transactions",
  "Unprocessed Transactions Total:<span class=\"spacer-out-right-xs\">{{total}}</span>": "Unprocessed Transactions Total:<span class=\"spacer-out-right-xs\">{{total}}</span>",
  "Unprocessed:": "Unprocessed:",
  "Update": "Update",
  "Usage": "Usage",
  "Use Distribution Password for password synchronization": "Use Distribution Password for password synchronization",
  "Use Remote Loader": "Use Remote Loader",
  "Use a starting date/time in the synchronize\r\n                operation": "Use a starting date/time in the synchronize\r\n                operation",
  "Use log settings from ilm\r\n            configurations\r\n            <input id=\"logDriverSetCheckbox\" type=\"checkbox\" name=\"localLockTimeout\" (input)=\"combineK($event)\"\r\n                formcontrolname=\"localLockTimeout\" class=\"form-control ng-untouched ng-valid ng-dirty\"\r\n                [checked]=\"driverSetLogCheckbox\" [(ngModel)]=\"driverSetLogCheckbox\"><i tabindex=\"0\"></i>": "Use log settings from ilm\r\n            configurations\r\n            <input id=\"logDriverSetCheckbox\" type=\"checkbox\" name=\"localLockTimeout\" (input)=\"combineK($event)\"\r\n                formcontrolname=\"localLockTimeout\" class=\"form-control ng-untouched ng-valid ng-dirty\"\r\n                [checked]=\"driverSetLogCheckbox\" [(ngModel)]=\"driverSetLogCheckbox\"><i tabindex=\"0\"></i>",
  "Use log settings from ilm\r\n            configurations\r\n            <input type=\"checkbox\" id=\"ilmConfigSetLogCheckbox\" name=\"localLockTimeout\" (input)=\"combineK($event)\"\r\n                formcontrolname=\"localLockTimeout\" class=\"form-control ng-untouched ng-valid ng-dirty\"\r\n                [(ngModel)]=\"driverSetLogCheckbox\"><i tabindex=\"0\"></i>": "Use log settings from ilm\r\n            configurations\r\n            <input type=\"checkbox\" id=\"ilmConfigSetLogCheckbox\" name=\"localLockTimeout\" (input)=\"combineK($event)\"\r\n                formcontrolname=\"localLockTimeout\" class=\"form-control ng-untouched ng-valid ng-dirty\"\r\n                [(ngModel)]=\"driverSetLogCheckbox\"><i tabindex=\"0\"></i>",
  "Use setting from the driver set.": "Use setting from the driver set.",
  "User Name": "User Name",
  "User Name:": "User Name:",
  "User Response Character Length": "User Response Character Length",
  "User is disabled": "User is disabled",
  "Users": "Users",
  "Value": "Value",
  "Value has to be in the range of ": "Value has to be in the range of ",
  "Value:": "Value:",
  "Valued Attributes": "Valued Attributes",
  "Verify whether existing passwords comply with the password policy (verification occurs on login)": "Verify whether existing passwords comply with the password policy (verification occurs on login)",
  "Version Discovery": "Version Discovery",
  "View Running Drivers": "View Running Drivers",
  "View Starting Drivers": "View Starting Drivers",
  "View Stopped Drivers": "View Stopped Drivers",
  "View Stopping Drivers": "View Stopping Drivers",
  "View Unknown Drivers": "View Unknown Drivers",
  "View XML": "View XML",
  "Warning": "Warning",
  "Wednesday": "Wednesday",
  "Weeks": "Weeks",
  "What is your PIN?": "What is your PIN?",
  "What is your User ID?": "What is your User ID?",
  "What is your childhood pet's name?": "What is your childhood pet's name?",
  "What is your mother's maiden name?": "What is your mother's maiden name?",
  "White": "White",
  "Write": "Write",
  "Write All": "Write All",
  "Write Trace Message": "Write Trace Message",
  "Xml Editor": "Xml Editor",
  "Xml Viewer": "Xml Viewer",
  "Xsl Trace Level:": "Xsl Trace Level:",
  "Yellow": "Yellow",
  "Yes": "Yes",
  "You are not been given sufficient rights to run this task": "You are not been given sufficient rights to run this task",
  "You cannot set the startup option to disabled because the driver is running.": "You cannot set the startup option to disabled because the driver is running.",
  "You have enabled Policy Verification and limited the user's ability to change their password. This will result in a conflict if any user's current password does not comply with the policy.": "You have enabled Policy Verification and limited the user's ability to change their password. This will result in a conflict if any user's current password does not comply with the policy.",
  "You must select a challenge set": "You must select a challenge set",
  "[User Defined]": "[User Defined]",
  "and": "and",
  "as publisher command results": "as publisher command results",
  "as publisher commands": "as publisher commands",
  "as publisher post event transformations": "as publisher post event transformations",
  "as publisher post input transformations": "as publisher post input transformations",
  "as publisher reported events": "as publisher reported events",
  "as subscriber command results": "as subscriber command results",
  "as subscriber commands": "as subscriber commands",
  "as subscriber post event transformations": "as subscriber post event transformations",
  "as subscriber pre output transformations": "as subscriber pre output transformations",
  "as subscriber reported events": "as subscriber reported events",
  "characters": "characters",
  "component selected to be displayed here": "component selected to be displayed here",
  "cron expression": "cron expression",
  "days": "days",
  "driver trace level must be positive number.": "driver trace level must be positive number.",
  "enter KMO for remote loader": "enter KMO for remote loader",
  "enter host name for remote loader": "enter host name for remote loader",
  "enter host name to connect to remote loader": "enter host name to connect to remote loader",
  "enter log limit": "enter log limit",
  "enter log limit between (50-500)": "enter log limit between (50-500)",
  "enter other parameters ": "enter other parameters ",
  "enter other parameters if required": "enter other parameters if required",
  "enter port for remote loader": "enter port for remote loader",
  "enter port number for  remote loader": "enter port number for  remote loader",
  "example: admin@abc.com": "example: admin@abc.com",
  "example: mail.example.com:587 or 123.456.7.89:587": "example: mail.example.com:587 or 123.456.7.89:587",
  "expand": "expand",
  "file\r\n                                                size\r\n                                                must be less than 10000.": "file\r\n                                                size\r\n                                                must be less than 10000.",
  "file size must be\r\n                                                positive number.": "file size must be\r\n                                                positive number.",
  "id": "id",
  "information": "information",
  "is equal to": "is equal to",
  "is false": "is false",
  "is greater than": "is greater than",
  "is greater than or equal to": "is greater than or equal to",
  "is less than or equal to": "is less than or equal to",
  "is lesser than": "is lesser than",
  "is newer than": "is newer than",
  "is not equal to": "is not equal to",
  "is not running": "is not running",
  "is older than": "is older than",
  "is pending shutdown": "is pending shutdown",
  "is running": "is running",
  "is starting": "is starting",
  "is stopped": "is stopped",
  "is true": "is true",
  "login-in with Advance Authentication": "login-in with Advance Authentication",
  "no": "no",
  "number of add associations": "number of add associations",
  "number of adds": "number of adds",
  "number of check object passwords": "number of check object passwords",
  "number of check passwords": "number of check passwords",
  "number of custom transactions": "number of custom transactions",
  "number of deletes": "number of deletes",
  "number of extended queries": "number of extended queries",
  "number of get named passwords": "number of get named passwords",
  "number of instances": "number of instances",
  "number of modifies": "number of modifies",
  "number of modify associations": "number of modify associations",
  "number of modify passwords": "number of modify passwords",
  "number of moves": "number of moves",
  "number of other transactions": "number of other transactions",
  "number of queries": "number of queries",
  "number of remove associations": "number of remove associations",
  "number of removes": "number of removes",
  "number of renames": "number of renames",
  "number of requested resyncs": "number of requested resyncs",
  "number of resync entries": "number of resync entries",
  "number of schema queries": "number of schema queries",
  "number of status events": "number of status events",
  "number of synchronizations": "number of synchronizations",
  "passwords": "passwords",
  "saved successfully": "saved successfully",
  "total number of transactions": "total number of transactions",
  "trace level must be positive number.": "trace level must be positive number.",
  "xsl trace level must be positive number.": "xsl trace level must be positive number.",
  "yes": "yes",
  "{{ buttonText }}": "{{ buttonText }}",
  "{{ isCreate ? 'Create' : 'Save' }}": "{{ isCreate ? 'Create' : 'Save' }}",
  "{{ resourceType +':' +\r\n                objectName}}": "{{ resourceType +':' +\r\n                objectName}}",
  "{{ selectionHeading }}": "{{ selectionHeading }}",
  "{{ title }}": "{{ title }}",
  "{{ val.label }}": "{{ val.label }}",
  "{{'No Results Found' | translate }}": "{{'No Results Found' | translate }}",
  "{{exportedDriver?.name||exportedDriver?.dn}}": "{{exportedDriver?.name||exportedDriver?.dn}}",
  "{{heading}}": "{{heading}}",
  "{{labelMap.get(x?.value?.level%4)}}": "{{labelMap.get(x?.value?.level%4)}}",
  "{{preValueData}}": "{{preValueData}}",
  "{{this.displayComplexData[rowNum]}}": "{{this.displayComplexData[rowNum]}}"
}
